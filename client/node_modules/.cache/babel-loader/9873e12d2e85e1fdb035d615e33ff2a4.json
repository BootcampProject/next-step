{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateSchemaHash = void 0;\n\nconst language_1 = require(\"graphql/language\");\n\nconst execution_1 = require(\"graphql/execution\");\n\nconst utilities_1 = require(\"graphql/utilities\");\n\nconst fast_json_stable_stringify_1 = __importDefault(require(\"fast-json-stable-stringify\"));\n\nconst createSHA_1 = __importDefault(require(\"./createSHA\"));\n\nfunction generateSchemaHash(schema) {\n  const introspectionQuery = utilities_1.getIntrospectionQuery();\n  const documentAST = language_1.parse(introspectionQuery);\n  const result = execution_1.execute(schema, documentAST);\n\n  if (result && typeof result.then === 'function') {\n    throw new Error(['The introspection query is resolving asynchronously; execution of an introspection query is not expected to return a `Promise`.', '', 'Wrapped type resolvers should maintain the existing execution dynamics of the resolvers they wrap (i.e. async vs sync) or introspection types should be excluded from wrapping by checking them with `graphql/type`s, `isIntrospectionType` predicate function prior to wrapping.'].join('\\n'));\n  }\n\n  if (!result || !result.data || !result.data.__schema) {\n    throw new Error('Unable to generate server introspection document.');\n  }\n\n  const introspectionSchema = result.data.__schema;\n  const stringifiedSchema = fast_json_stable_stringify_1.default(introspectionSchema);\n  return createSHA_1.default('sha512').update(stringifiedSchema).digest('hex');\n}\n\nexports.generateSchemaHash = generateSchemaHash;","map":{"version":3,"sources":["../../src/utils/schemaHash.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,4BAAA,GAAA,eAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;AAEA,MAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAGA,SAAgB,kBAAhB,CAAmC,MAAnC,EAAwD;AACtD,QAAM,kBAAkB,GAAG,WAAA,CAAA,qBAAA,EAA3B;AACA,QAAM,WAAW,GAAG,UAAA,CAAA,KAAA,CAAM,kBAAN,CAApB;AACA,QAAM,MAAM,GAAG,WAAA,CAAA,OAAA,CAAQ,MAAR,EAAgB,WAAhB,CAAf;;AAMA,MACE,MAAM,IACN,OAAQ,MAAqC,CAAC,IAA9C,KAAuD,UAFzD,EAGE;AACA,UAAM,IAAI,KAAJ,CACJ,CACE,iIADF,EAEE,EAFF,EAGE,mRAHF,EAIE,IAJF,CAIO,IAJP,CADI,CAAN;AAOD;;AAED,MAAI,CAAC,MAAD,IAAW,CAAC,MAAM,CAAC,IAAnB,IAA2B,CAAC,MAAM,CAAC,IAAP,CAAY,QAA5C,EAAsD;AACpD,UAAM,IAAI,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAED,QAAM,mBAAmB,GAAwB,MAAM,CAAC,IAAP,CAAY,QAA7D;AAKA,QAAM,iBAAiB,GAAG,4BAAA,CAAA,OAAA,CAAgB,mBAAhB,CAA1B;AAEA,SAAO,WAAA,CAAA,OAAA,CAAU,QAAV,EACJ,MADI,CACG,iBADH,EAEJ,MAFI,CAEG,KAFH,CAAP;AAGD;;AApCD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateSchemaHash = void 0;\nconst language_1 = require(\"graphql/language\");\nconst execution_1 = require(\"graphql/execution\");\nconst utilities_1 = require(\"graphql/utilities\");\nconst fast_json_stable_stringify_1 = __importDefault(require(\"fast-json-stable-stringify\"));\nconst createSHA_1 = __importDefault(require(\"./createSHA\"));\nfunction generateSchemaHash(schema) {\n    const introspectionQuery = utilities_1.getIntrospectionQuery();\n    const documentAST = language_1.parse(introspectionQuery);\n    const result = execution_1.execute(schema, documentAST);\n    if (result &&\n        typeof result.then === 'function') {\n        throw new Error([\n            'The introspection query is resolving asynchronously; execution of an introspection query is not expected to return a `Promise`.',\n            '',\n            'Wrapped type resolvers should maintain the existing execution dynamics of the resolvers they wrap (i.e. async vs sync) or introspection types should be excluded from wrapping by checking them with `graphql/type`s, `isIntrospectionType` predicate function prior to wrapping.',\n        ].join('\\n'));\n    }\n    if (!result || !result.data || !result.data.__schema) {\n        throw new Error('Unable to generate server introspection document.');\n    }\n    const introspectionSchema = result.data.__schema;\n    const stringifiedSchema = fast_json_stable_stringify_1.default(introspectionSchema);\n    return createSHA_1.default('sha512')\n        .update(stringifiedSchema)\n        .digest('hex');\n}\nexports.generateSchemaHash = generateSchemaHash;\n//# sourceMappingURL=schemaHash.js.map"]},"metadata":{},"sourceType":"script"}