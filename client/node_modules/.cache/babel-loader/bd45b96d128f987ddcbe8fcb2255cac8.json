{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar graphql_1 = require(\"graphql\");\n\nfunction forEachField(schema, fn) {\n  var typeMap = schema.getTypeMap();\n  Object.keys(typeMap).forEach(function (typeName) {\n    var type = typeMap[typeName]; // TODO: maybe have an option to include these?\n\n    if (!graphql_1.getNamedType(type).name.startsWith('__') && type instanceof graphql_1.GraphQLObjectType) {\n      var fields_1 = type.getFields();\n      Object.keys(fields_1).forEach(function (fieldName) {\n        var field = fields_1[fieldName];\n        fn(field, typeName, fieldName);\n      });\n    }\n  });\n}\n\nexports.default = forEachField;","map":{"version":3,"sources":["../../src/generate/forEachField.ts"],"names":[],"mappings":";;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAGA,SAAS,YAAT,CAAsB,MAAtB,EAA6C,EAA7C,EAAiE;AAC/D,MAAM,OAAO,GAAG,MAAM,CAAC,UAAP,EAAhB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,OAArB,CAA6B,UAAA,QAAA,EAAQ;AACnC,QAAM,IAAI,GAAG,OAAO,CAAC,QAAD,CAApB,CADmC,CAGnC;;AACA,QACE,CAAC,SAAA,CAAA,YAAA,CAAa,IAAb,EAAmB,IAAnB,CAAwB,UAAxB,CAAmC,IAAnC,CAAD,IACA,IAAI,YAAY,SAAA,CAAA,iBAFlB,EAGE;AACA,UAAM,QAAM,GAAG,IAAI,CAAC,SAAL,EAAf;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,QAAZ,EAAoB,OAApB,CAA4B,UAAA,SAAA,EAAS;AACnC,YAAM,KAAK,GAAG,QAAM,CAAC,SAAD,CAApB;AACA,QAAA,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,SAAlB,CAAF;AACD,OAHD;AAID;AACF,GAdD;AAeD;;AAED,OAAA,CAAA,OAAA,GAAe,YAAf","sourceRoot":"","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction forEachField(schema, fn) {\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!graphql_1.getNamedType(type).name.startsWith('__') &&\n            type instanceof graphql_1.GraphQLObjectType) {\n            var fields_1 = type.getFields();\n            Object.keys(fields_1).forEach(function (fieldName) {\n                var field = fields_1[fieldName];\n                fn(field, typeName, fieldName);\n            });\n        }\n    });\n}\nexports.default = forEachField;\n//# sourceMappingURL=forEachField.js.map"]},"metadata":{},"sourceType":"script"}