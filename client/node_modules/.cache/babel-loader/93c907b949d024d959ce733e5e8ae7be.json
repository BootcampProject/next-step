{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction mergeDeep(target, source) {\n  var output = Object.assign({}, target);\n\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      var _a, _b;\n\n      if (isObject(source[key])) {\n        if (!(key in target)) {\n          Object.assign(output, (_a = {}, _a[key] = source[key], _a));\n        } else {\n          output[key] = mergeDeep(target[key], source[key]);\n        }\n      } else {\n        Object.assign(output, (_b = {}, _b[key] = source[key], _b));\n      }\n    });\n  }\n\n  return output;\n}\n\nexports.default = mergeDeep;\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}","map":{"version":3,"sources":["../src/mergeDeep.ts"],"names":[],"mappings":";;;;AAAA,SAAwB,SAAxB,CAAkC,MAAlC,EAA+C,MAA/C,EAA0D;AACxD,MAAI,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,CAAb;;AACA,MAAI,QAAQ,CAAC,MAAD,CAAR,IAAoB,QAAQ,CAAC,MAAD,CAAhC,EAA0C;AACxC,IAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,GAAA,EAAG;;;AAC7B,UAAI,QAAQ,CAAC,MAAM,CAAC,GAAD,CAAP,CAAZ,EAA2B;AACzB,YAAI,EAAE,GAAG,IAAI,MAAT,CAAJ,EAAsB;AACpB,UAAA,MAAM,CAAC,MAAP,CAAc,MAAd,GAAoB,EAAA,GAAA,EAAA,EAAI,EAAA,CAAC,GAAD,CAAA,GAAO,MAAM,CAAC,GAAD,CAAjB,EAAsB,EAA1C;AACD,SAFD,MAEO;AACL,UAAA,MAAM,CAAC,GAAD,CAAN,GAAc,SAAS,CAAC,MAAM,CAAC,GAAD,CAAP,EAAc,MAAM,CAAC,GAAD,CAApB,CAAvB;AACD;AACF,OAND,MAMO;AACL,QAAA,MAAM,CAAC,MAAP,CAAc,MAAd,GAAoB,EAAA,GAAA,EAAA,EAAI,EAAA,CAAC,GAAD,CAAA,GAAO,MAAM,CAAC,GAAD,CAAjB,EAAsB,EAA1C;AACD;AACF,KAVD;AAWD;;AACD,SAAO,MAAP;AACD;;AAhBD,OAAA,CAAA,OAAA,GAAA,SAAA;;AAkBA,SAAS,QAAT,CAAkB,IAAlB,EAA2B;AACzB,SAAO,IAAI,IAAI,OAAO,IAAP,KAAgB,QAAxB,IAAoC,CAAC,KAAK,CAAC,OAAN,CAAc,IAAd,CAA5C;AACD","sourceRoot":"","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nfunction mergeDeep(target, source) {\n    var output = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(function (key) {\n            var _a, _b;\n            if (isObject(source[key])) {\n                if (!(key in target)) {\n                    Object.assign(output, (_a = {}, _a[key] = source[key], _a));\n                }\n                else {\n                    output[key] = mergeDeep(target[key], source[key]);\n                }\n            }\n            else {\n                Object.assign(output, (_b = {}, _b[key] = source[key], _b));\n            }\n        });\n    }\n    return output;\n}\nexports.default = mergeDeep;\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceMappingURL=mergeDeep.js.map"]},"metadata":{},"sourceType":"script"}