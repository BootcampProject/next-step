{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InMemoryLRUCache = void 0;\n\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\n\nfunction defaultLengthCalculation(item) {\n  if (Array.isArray(item) || typeof item === 'string') {\n    return item.length;\n  }\n\n  return 1;\n}\n\nclass InMemoryLRUCache {\n  constructor() {\n    let {\n      maxSize = Infinity,\n      sizeCalculator = defaultLengthCalculation,\n      onDispose\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.store = new lru_cache_1.default({\n      max: maxSize,\n      length: sizeCalculator,\n      dispose: onDispose\n    });\n  }\n\n  get(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.store.get(key);\n    });\n  }\n\n  set(key, value, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const maxAge = options && options.ttl && options.ttl * 1000;\n      this.store.set(key, value, maxAge);\n    });\n  }\n\n  delete(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.store.del(key);\n    });\n  }\n\n  flush() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.store.reset();\n    });\n  }\n\n  getTotalSize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.store.length;\n    });\n  }\n\n}\n\nexports.InMemoryLRUCache = InMemoryLRUCache;","map":{"version":3,"sources":["../src/InMemoryLRUCache.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAGA,SAAS,wBAAT,CAAkC,IAAlC,EAA2C;AACzC,MAAI,KAAK,CAAC,OAAN,CAAc,IAAd,KAAuB,OAAO,IAAP,KAAgB,QAA3C,EAAqD;AACnD,WAAO,IAAI,CAAC,MAAZ;AACD;;AAID,SAAO,CAAP;AACD;;AAED,MAAa,gBAAb,CAA6B;AAI3B,EAAA,WAAA,GAQM;AAAA,QARM;AACV,MAAA,OAAO,GAAG,QADA;AAEV,MAAA,cAAc,GAAG,wBAFP;AAGV,MAAA;AAHU,KAQN,uEAAF,EAAE;AACJ,SAAK,KAAL,GAAa,IAAI,WAAA,CAAA,OAAJ,CAAa;AACxB,MAAA,GAAG,EAAE,OADmB;AAExB,MAAA,MAAM,EAAE,cAFgB;AAGxB,MAAA,OAAO,EAAE;AAHe,KAAb,CAAb;AAKD;;AAEK,EAAA,GAAG,CAAC,GAAD,EAAY;;AACnB,aAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAP;AACD,K;AAAA;;AACK,EAAA,GAAG,CAAC,GAAD,EAAc,KAAd,EAAwB,OAAxB,EAAkD;;AACzD,YAAM,MAAM,GAAG,OAAO,IAAI,OAAO,CAAC,GAAnB,IAA0B,OAAO,CAAC,GAAR,GAAc,IAAvD;AACA,WAAK,KAAL,CAAW,GAAX,CAAe,GAAf,EAAoB,KAApB,EAA2B,MAA3B;AACD,K;AAAA;;AACK,EAAA,MAAM,CAAC,GAAD,EAAY;;AACtB,WAAK,KAAL,CAAW,GAAX,CAAe,GAAf;AACD,K;AAAA;;AAIK,EAAA,KAAK,GAAA;;AACT,WAAK,KAAL,CAAW,KAAX;AACD,K;AAAA;;AACK,EAAA,YAAY,GAAA;;AAChB,aAAO,KAAK,KAAL,CAAW,MAAlB;AACD,K;AAAA;;AAtC0B;;AAA7B,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryLRUCache = void 0;\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nfunction defaultLengthCalculation(item) {\n    if (Array.isArray(item) || typeof item === 'string') {\n        return item.length;\n    }\n    return 1;\n}\nclass InMemoryLRUCache {\n    constructor({ maxSize = Infinity, sizeCalculator = defaultLengthCalculation, onDispose, } = {}) {\n        this.store = new lru_cache_1.default({\n            max: maxSize,\n            length: sizeCalculator,\n            dispose: onDispose,\n        });\n    }\n    get(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.store.get(key);\n        });\n    }\n    set(key, value, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const maxAge = options && options.ttl && options.ttl * 1000;\n            this.store.set(key, value, maxAge);\n        });\n    }\n    delete(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.store.del(key);\n        });\n    }\n    flush() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.store.reset();\n        });\n    }\n    getTotalSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.store.length;\n        });\n    }\n}\nexports.InMemoryLRUCache = InMemoryLRUCache;\n//# sourceMappingURL=InMemoryLRUCache.js.map"]},"metadata":{},"sourceType":"script"}