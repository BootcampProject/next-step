{"ast":null,"code":"/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\n\nvar DEFAULT = require(\"./default\");\n\nvar parser = require(\"./parser\");\n\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\n\nvar _ = require(\"./util\");\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\n\n\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\n\n\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\"\n    };\n  }\n\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing\n  };\n}\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\n\n\nfunction shallowCopyObject(obj) {\n  var ret = {};\n\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n\n  return ret;\n}\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList, onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\n\n\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error('Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time');\n    }\n\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\n\n\nFilterXSS.prototype.process = function (html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var cssFilter = me.cssFilter; // remove invisible characters\n\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  } // remove html comments\n\n\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  } // if enable stripIgnoreTagBody\n\n\n  var stripIgnoreTagBody = false;\n\n  if (options.stripIgnoreTagBody) {\n    var stripIgnoreTagBody = DEFAULT.StripTagBody(options.stripIgnoreTagBody, onIgnoreTag);\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(html, function (sourcePosition, position, tag, html, isClosing) {\n    var info = {\n      sourcePosition: sourcePosition,\n      position: position,\n      isClosing: isClosing,\n      isWhite: whiteList.hasOwnProperty(tag)\n    }; // call `onTag()`\n\n    var ret = onTag(tag, html, info);\n    if (!isNull(ret)) return ret;\n\n    if (info.isWhite) {\n      if (info.isClosing) {\n        return \"</\" + tag + \">\";\n      }\n\n      var attrs = getAttrs(html);\n      var whiteAttrList = whiteList[tag];\n      var attrsHtml = parseAttr(attrs.html, function (name, value) {\n        // call `onTagAttr()`\n        var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n        var ret = onTagAttr(tag, name, value, isWhiteAttr);\n        if (!isNull(ret)) return ret;\n\n        if (isWhiteAttr) {\n          // call `safeAttrValue()`\n          value = safeAttrValue(tag, name, value, cssFilter);\n\n          if (value) {\n            return name + '=\"' + value + '\"';\n          } else {\n            return name;\n          }\n        } else {\n          // call `onIgnoreTagAttr()`\n          var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n          return;\n        }\n      }); // build new tag html\n\n      var html = \"<\" + tag;\n      if (attrsHtml) html += \" \" + attrsHtml;\n      if (attrs.closing) html += \" /\";\n      html += \">\";\n      return html;\n    } else {\n      // call `onIgnoreTag()`\n      var ret = onIgnoreTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n      return escapeHtml(html);\n    }\n  }, escapeHtml); // if enable stripIgnoreTagBody\n\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nmodule.exports = FilterXSS;","map":{"version":3,"sources":["C:/Users/Sallam/Desktop/projects/next-step/server/node_modules/xss/lib/xss.js"],"names":["FilterCSS","require","DEFAULT","parser","parseTag","parseAttr","_","isNull","obj","undefined","getAttrs","html","i","spaceIndex","closing","length","trim","slice","isClosing","shallowCopyObject","ret","FilterXSS","options","stripIgnoreTag","onIgnoreTag","console","error","onIgnoreTagStripAll","whiteList","onTag","onTagAttr","onIgnoreTagAttr","safeAttrValue","escapeHtml","css","cssFilter","prototype","process","toString","me","stripBlankChar","allowCommentTag","stripCommentTag","stripIgnoreTagBody","StripTagBody","retHtml","sourcePosition","position","tag","info","isWhite","hasOwnProperty","attrs","whiteAttrList","attrsHtml","name","value","isWhiteAttr","indexOf","remove","module","exports"],"mappings":"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","sourcesContent":["/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\nvar _ = require(\"./util\");\n\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\",\n    };\n  }\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing,\n  };\n}\n\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject(obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList, onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error(\n        'Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'\n      );\n    }\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\nFilterXSS.prototype.process = function (html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var cssFilter = me.cssFilter;\n\n  // remove invisible characters\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  }\n\n  // remove html comments\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  }\n\n  // if enable stripIgnoreTagBody\n  var stripIgnoreTagBody = false;\n  if (options.stripIgnoreTagBody) {\n    var stripIgnoreTagBody = DEFAULT.StripTagBody(\n      options.stripIgnoreTagBody,\n      onIgnoreTag\n    );\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(\n    html,\n    function (sourcePosition, position, tag, html, isClosing) {\n      var info = {\n        sourcePosition: sourcePosition,\n        position: position,\n        isClosing: isClosing,\n        isWhite: whiteList.hasOwnProperty(tag),\n      };\n\n      // call `onTag()`\n      var ret = onTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n\n      if (info.isWhite) {\n        if (info.isClosing) {\n          return \"</\" + tag + \">\";\n        }\n\n        var attrs = getAttrs(html);\n        var whiteAttrList = whiteList[tag];\n        var attrsHtml = parseAttr(attrs.html, function (name, value) {\n          // call `onTagAttr()`\n          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n          var ret = onTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n\n          if (isWhiteAttr) {\n            // call `safeAttrValue()`\n            value = safeAttrValue(tag, name, value, cssFilter);\n            if (value) {\n              return name + '=\"' + value + '\"';\n            } else {\n              return name;\n            }\n          } else {\n            // call `onIgnoreTagAttr()`\n            var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n            if (!isNull(ret)) return ret;\n            return;\n          }\n        });\n\n        // build new tag html\n        var html = \"<\" + tag;\n        if (attrsHtml) html += \" \" + attrsHtml;\n        if (attrs.closing) html += \" /\";\n        html += \">\";\n        return html;\n      } else {\n        // call `onIgnoreTag()`\n        var ret = onIgnoreTag(tag, html, info);\n        if (!isNull(ret)) return ret;\n        return escapeHtml(html);\n      }\n    },\n    escapeHtml\n  );\n\n  // if enable stripIgnoreTagBody\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nmodule.exports = FilterXSS;\n"]},"metadata":{},"sourceType":"script"}