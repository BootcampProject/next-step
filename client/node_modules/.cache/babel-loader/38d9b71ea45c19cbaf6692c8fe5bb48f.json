{"ast":null,"code":"/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\nvar DEFAULT = require('./default');\n\nvar parseStyle = require('./parser');\n\nvar _ = require('./util');\n/**\n * 返回值是否为空\n *\n * @param {Object} obj\n * @return {Boolean}\n */\n\n\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n/**\n * 浅拷贝对象\n *\n * @param {Object} obj\n * @return {Object}\n */\n\n\nfunction shallowCopyObject(obj) {\n  var ret = {};\n\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n\n  return ret;\n}\n/**\n * 创建CSS过滤器\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\n\n\nfunction FilterCSS(options) {\n  options = shallowCopyObject(options || {});\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onAttr = options.onAttr || DEFAULT.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS.prototype.process = function (css) {\n  // 兼容各种奇葩输入\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;else if (typeof check === 'function') isWhite = check(value);else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false; // 如果过滤后 value 为空则直接忽略\n\n    value = safeAttrValue(name, value);\n    if (!value) return;\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n      var ret = onAttr(name, value, opts);\n\n      if (isNull(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n    } else {\n      var ret = onIgnoreAttr(name, value, opts);\n\n      if (!isNull(ret)) {\n        return ret;\n      }\n    }\n  });\n  return retCSS;\n};\n\nmodule.exports = FilterCSS;","map":{"version":3,"sources":["C:/Users/Sallam/Desktop/projects/next-step/server/node_modules/cssfilter/lib/css.js"],"names":["DEFAULT","require","parseStyle","_","isNull","obj","undefined","shallowCopyObject","ret","i","FilterCSS","options","whiteList","onAttr","onIgnoreAttr","safeAttrValue","prototype","process","css","toString","me","retCSS","sourcePosition","position","name","value","source","check","isWhite","RegExp","test","opts","module","exports"],"mappings":"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","sourcesContent":["/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar parseStyle = require('./parser');\nvar _ = require('./util');\n\n\n/**\n * 返回值是否为空\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull (obj) {\n  return (obj === undefined || obj === null);\n}\n\n/**\n * 浅拷贝对象\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject (obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * 创建CSS过滤器\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\nfunction FilterCSS (options) {\n  options = shallowCopyObject(options || {});\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onAttr = options.onAttr || DEFAULT.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS.prototype.process = function (css) {\n  // 兼容各种奇葩输入\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;\n    else if (typeof check === 'function') isWhite = check(value);\n    else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false;\n\n    // 如果过滤后 value 为空则直接忽略\n    value = safeAttrValue(name, value);\n    if (!value) return;\n\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n\n      var ret = onAttr(name, value, opts);\n      if (isNull(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n\n    } else {\n\n      var ret = onIgnoreAttr(name, value, opts);\n      if (!isNull(ret)) {\n        return ret;\n      }\n\n    }\n  });\n\n  return retCSS;\n};\n\n\nmodule.exports = FilterCSS;\n"]},"metadata":{},"sourceType":"script"}