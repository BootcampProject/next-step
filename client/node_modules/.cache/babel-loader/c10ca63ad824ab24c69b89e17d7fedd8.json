{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasPersistedQueryError = exports.formatApolloErrors = exports.UserInputError = exports.PersistedQueryNotSupportedError = exports.PersistedQueryNotFoundError = exports.ForbiddenError = exports.AuthenticationError = exports.ValidationError = exports.SyntaxError = exports.fromGraphQLError = exports.toApolloError = exports.ApolloError = void 0;\n\nconst graphql_1 = require(\"graphql\");\n\nclass ApolloError extends Error {\n  constructor(message, code, extensions) {\n    super(message);\n\n    if (extensions) {\n      Object.keys(extensions).filter(keyName => keyName !== 'message' && keyName !== 'extensions').forEach(key => {\n        this[key] = extensions[key];\n      });\n    }\n\n    if (!this.name) {\n      Object.defineProperty(this, 'name', {\n        value: 'ApolloError'\n      });\n    }\n\n    const userProvidedExtensions = extensions && extensions.extensions || null;\n    this.extensions = Object.assign(Object.assign(Object.assign({}, extensions), userProvidedExtensions), {\n      code\n    });\n  }\n\n}\n\nexports.ApolloError = ApolloError;\n\nfunction enrichError(error) {\n  let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const expanded = Object.create(Object.getPrototypeOf(error), {\n    name: {\n      value: error.name\n    },\n    message: {\n      value: error.message,\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      value: error.locations || undefined,\n      enumerable: true\n    },\n    path: {\n      value: error.path || undefined,\n      enumerable: true\n    },\n    nodes: {\n      value: error.nodes || undefined\n    },\n    source: {\n      value: error.source || undefined\n    },\n    positions: {\n      value: error.positions || undefined\n    },\n    originalError: {\n      value: error.originalError\n    }\n  });\n  expanded.extensions = Object.assign(Object.assign({}, error.extensions), {\n    code: error.extensions && error.extensions.code || 'INTERNAL_SERVER_ERROR',\n    exception: Object.assign(Object.assign({}, error.extensions && error.extensions.exception), error.originalError)\n  });\n  delete expanded.extensions.exception.extensions;\n\n  if (debug && !expanded.extensions.exception.stacktrace) {\n    expanded.extensions.exception.stacktrace = error.originalError && error.originalError.stack && error.originalError.stack.split('\\n') || error.stack && error.stack.split('\\n');\n  }\n\n  if (Object.keys(expanded.extensions.exception).length === 0) {\n    delete expanded.extensions.exception;\n  }\n\n  return expanded;\n}\n\nfunction toApolloError(error) {\n  let code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'INTERNAL_SERVER_ERROR';\n  let err = error;\n\n  if (err.extensions) {\n    err.extensions.code = code;\n  } else {\n    err.extensions = {\n      code\n    };\n  }\n\n  return err;\n}\n\nexports.toApolloError = toApolloError;\n\nfunction fromGraphQLError(error, options) {\n  const copy = options && options.errorClass ? new options.errorClass(error.message) : new ApolloError(error.message);\n  Object.keys(error).forEach(key => {\n    copy[key] = error[key];\n  });\n  copy.extensions = Object.assign(Object.assign({}, copy.extensions), error.extensions);\n\n  if (!copy.extensions.code) {\n    copy.extensions.code = options && options.code || 'INTERNAL_SERVER_ERROR';\n  }\n\n  Object.defineProperty(copy, 'originalError', {\n    value: {}\n  });\n  Object.getOwnPropertyNames(error).forEach(key => {\n    Object.defineProperty(copy.originalError, key, {\n      value: error[key]\n    });\n  });\n  return copy;\n}\n\nexports.fromGraphQLError = fromGraphQLError;\n\nclass SyntaxError extends ApolloError {\n  constructor(message) {\n    super(message, 'GRAPHQL_PARSE_FAILED');\n    Object.defineProperty(this, 'name', {\n      value: 'SyntaxError'\n    });\n  }\n\n}\n\nexports.SyntaxError = SyntaxError;\n\nclass ValidationError extends ApolloError {\n  constructor(message) {\n    super(message, 'GRAPHQL_VALIDATION_FAILED');\n    Object.defineProperty(this, 'name', {\n      value: 'ValidationError'\n    });\n  }\n\n}\n\nexports.ValidationError = ValidationError;\n\nclass AuthenticationError extends ApolloError {\n  constructor(message) {\n    super(message, 'UNAUTHENTICATED');\n    Object.defineProperty(this, 'name', {\n      value: 'AuthenticationError'\n    });\n  }\n\n}\n\nexports.AuthenticationError = AuthenticationError;\n\nclass ForbiddenError extends ApolloError {\n  constructor(message) {\n    super(message, 'FORBIDDEN');\n    Object.defineProperty(this, 'name', {\n      value: 'ForbiddenError'\n    });\n  }\n\n}\n\nexports.ForbiddenError = ForbiddenError;\n\nclass PersistedQueryNotFoundError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotFound', 'PERSISTED_QUERY_NOT_FOUND');\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotFoundError'\n    });\n  }\n\n}\n\nexports.PersistedQueryNotFoundError = PersistedQueryNotFoundError;\n\nclass PersistedQueryNotSupportedError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotSupported', 'PERSISTED_QUERY_NOT_SUPPORTED');\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotSupportedError'\n    });\n  }\n\n}\n\nexports.PersistedQueryNotSupportedError = PersistedQueryNotSupportedError;\n\nclass UserInputError extends ApolloError {\n  constructor(message, properties) {\n    super(message, 'BAD_USER_INPUT', properties);\n    Object.defineProperty(this, 'name', {\n      value: 'UserInputError'\n    });\n  }\n\n}\n\nexports.UserInputError = UserInputError;\n\nfunction formatApolloErrors(errors, options) {\n  if (!options) {\n    return errors.map(error => enrichError(error));\n  }\n\n  const {\n    formatter,\n    debug\n  } = options;\n  const enrichedErrors = errors.map(error => enrichError(error, debug));\n\n  const makePrintable = error => {\n    if (error instanceof Error) {\n      const graphQLError = error;\n      return Object.assign(Object.assign(Object.assign({\n        message: graphQLError.message\n      }, graphQLError.locations && {\n        locations: graphQLError.locations\n      }), graphQLError.path && {\n        path: graphQLError.path\n      }), graphQLError.extensions && {\n        extensions: graphQLError.extensions\n      });\n    }\n\n    return error;\n  };\n\n  if (!formatter) {\n    return enrichedErrors;\n  }\n\n  return enrichedErrors.map(error => {\n    try {\n      return makePrintable(formatter(error));\n    } catch (err) {\n      if (debug) {\n        return enrichError(err, debug);\n      } else {\n        const newError = fromGraphQLError(new graphql_1.GraphQLError('Internal server error'));\n        return enrichError(newError, debug);\n      }\n    }\n  });\n}\n\nexports.formatApolloErrors = formatApolloErrors;\n\nfunction hasPersistedQueryError(errors) {\n  return Array.isArray(errors) ? errors.some(error => error instanceof PersistedQueryNotFoundError || error instanceof PersistedQueryNotSupportedError) : false;\n}\n\nexports.hasPersistedQueryError = hasPersistedQueryError;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasPersistedQueryError = exports.formatApolloErrors = exports.UserInputError = exports.PersistedQueryNotSupportedError = exports.PersistedQueryNotFoundError = exports.ForbiddenError = exports.AuthenticationError = exports.ValidationError = exports.SyntaxError = exports.fromGraphQLError = exports.toApolloError = exports.ApolloError = void 0;\nconst graphql_1 = require(\"graphql\");\nclass ApolloError extends Error {\n    constructor(message, code, extensions) {\n        super(message);\n        if (extensions) {\n            Object.keys(extensions)\n                .filter(keyName => keyName !== 'message' && keyName !== 'extensions')\n                .forEach(key => {\n                this[key] = extensions[key];\n            });\n        }\n        if (!this.name) {\n            Object.defineProperty(this, 'name', { value: 'ApolloError' });\n        }\n        const userProvidedExtensions = (extensions && extensions.extensions) || null;\n        this.extensions = Object.assign(Object.assign(Object.assign({}, extensions), userProvidedExtensions), { code });\n    }\n}\nexports.ApolloError = ApolloError;\nfunction enrichError(error, debug = false) {\n    const expanded = Object.create(Object.getPrototypeOf(error), {\n        name: {\n            value: error.name,\n        },\n        message: {\n            value: error.message,\n            enumerable: true,\n            writable: true,\n        },\n        locations: {\n            value: error.locations || undefined,\n            enumerable: true,\n        },\n        path: {\n            value: error.path || undefined,\n            enumerable: true,\n        },\n        nodes: {\n            value: error.nodes || undefined,\n        },\n        source: {\n            value: error.source || undefined,\n        },\n        positions: {\n            value: error.positions || undefined,\n        },\n        originalError: {\n            value: error.originalError,\n        },\n    });\n    expanded.extensions = Object.assign(Object.assign({}, error.extensions), { code: (error.extensions && error.extensions.code) || 'INTERNAL_SERVER_ERROR', exception: Object.assign(Object.assign({}, (error.extensions && error.extensions.exception)), error.originalError) });\n    delete expanded.extensions.exception.extensions;\n    if (debug && !expanded.extensions.exception.stacktrace) {\n        expanded.extensions.exception.stacktrace =\n            (error.originalError &&\n                error.originalError.stack &&\n                error.originalError.stack.split('\\n')) ||\n                (error.stack && error.stack.split('\\n'));\n    }\n    if (Object.keys(expanded.extensions.exception).length === 0) {\n        delete expanded.extensions.exception;\n    }\n    return expanded;\n}\nfunction toApolloError(error, code = 'INTERNAL_SERVER_ERROR') {\n    let err = error;\n    if (err.extensions) {\n        err.extensions.code = code;\n    }\n    else {\n        err.extensions = { code };\n    }\n    return err;\n}\nexports.toApolloError = toApolloError;\nfunction fromGraphQLError(error, options) {\n    const copy = options && options.errorClass\n        ? new options.errorClass(error.message)\n        : new ApolloError(error.message);\n    Object.keys(error).forEach(key => {\n        copy[key] = error[key];\n    });\n    copy.extensions = Object.assign(Object.assign({}, copy.extensions), error.extensions);\n    if (!copy.extensions.code) {\n        copy.extensions.code = (options && options.code) || 'INTERNAL_SERVER_ERROR';\n    }\n    Object.defineProperty(copy, 'originalError', { value: {} });\n    Object.getOwnPropertyNames(error).forEach(key => {\n        Object.defineProperty(copy.originalError, key, { value: error[key] });\n    });\n    return copy;\n}\nexports.fromGraphQLError = fromGraphQLError;\nclass SyntaxError extends ApolloError {\n    constructor(message) {\n        super(message, 'GRAPHQL_PARSE_FAILED');\n        Object.defineProperty(this, 'name', { value: 'SyntaxError' });\n    }\n}\nexports.SyntaxError = SyntaxError;\nclass ValidationError extends ApolloError {\n    constructor(message) {\n        super(message, 'GRAPHQL_VALIDATION_FAILED');\n        Object.defineProperty(this, 'name', { value: 'ValidationError' });\n    }\n}\nexports.ValidationError = ValidationError;\nclass AuthenticationError extends ApolloError {\n    constructor(message) {\n        super(message, 'UNAUTHENTICATED');\n        Object.defineProperty(this, 'name', { value: 'AuthenticationError' });\n    }\n}\nexports.AuthenticationError = AuthenticationError;\nclass ForbiddenError extends ApolloError {\n    constructor(message) {\n        super(message, 'FORBIDDEN');\n        Object.defineProperty(this, 'name', { value: 'ForbiddenError' });\n    }\n}\nexports.ForbiddenError = ForbiddenError;\nclass PersistedQueryNotFoundError extends ApolloError {\n    constructor() {\n        super('PersistedQueryNotFound', 'PERSISTED_QUERY_NOT_FOUND');\n        Object.defineProperty(this, 'name', {\n            value: 'PersistedQueryNotFoundError',\n        });\n    }\n}\nexports.PersistedQueryNotFoundError = PersistedQueryNotFoundError;\nclass PersistedQueryNotSupportedError extends ApolloError {\n    constructor() {\n        super('PersistedQueryNotSupported', 'PERSISTED_QUERY_NOT_SUPPORTED');\n        Object.defineProperty(this, 'name', {\n            value: 'PersistedQueryNotSupportedError',\n        });\n    }\n}\nexports.PersistedQueryNotSupportedError = PersistedQueryNotSupportedError;\nclass UserInputError extends ApolloError {\n    constructor(message, properties) {\n        super(message, 'BAD_USER_INPUT', properties);\n        Object.defineProperty(this, 'name', { value: 'UserInputError' });\n    }\n}\nexports.UserInputError = UserInputError;\nfunction formatApolloErrors(errors, options) {\n    if (!options) {\n        return errors.map(error => enrichError(error));\n    }\n    const { formatter, debug } = options;\n    const enrichedErrors = errors.map(error => enrichError(error, debug));\n    const makePrintable = error => {\n        if (error instanceof Error) {\n            const graphQLError = error;\n            return Object.assign(Object.assign(Object.assign({ message: graphQLError.message }, (graphQLError.locations && { locations: graphQLError.locations })), (graphQLError.path && { path: graphQLError.path })), (graphQLError.extensions && { extensions: graphQLError.extensions }));\n        }\n        return error;\n    };\n    if (!formatter) {\n        return enrichedErrors;\n    }\n    return enrichedErrors.map(error => {\n        try {\n            return makePrintable(formatter(error));\n        }\n        catch (err) {\n            if (debug) {\n                return enrichError(err, debug);\n            }\n            else {\n                const newError = fromGraphQLError(new graphql_1.GraphQLError('Internal server error'));\n                return enrichError(newError, debug);\n            }\n        }\n    });\n}\nexports.formatApolloErrors = formatApolloErrors;\nfunction hasPersistedQueryError(errors) {\n    return Array.isArray(errors)\n        ? errors.some(error => error instanceof PersistedQueryNotFoundError ||\n            error instanceof PersistedQueryNotSupportedError)\n        : false;\n}\nexports.hasPersistedQueryError = hasPersistedQueryError;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}