{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sallam\\\\Desktop\\\\projects\\\\next-step\\\\client\\\\src\\\\components\\\\questions\\\\questions.js\";\nimport React, { useEffect } from \"react\";\nimport Question from \"../answers/answers\";\nimport { useQuestionContext } from \"../../utils/GlobalState\";\nimport { UPDATE_QUESTIONS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_QUESTIONS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction QuestionList() {\n  const [state, dispatch] = useQuestionContext();\n  const {\n    currentCategory\n  } = state;\n  console.log(currentCategory, \"WWE ARE HERE!\");\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_QUESTIONS);\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_QUESTIONS,\n        questions: data.questions\n      });\n      data.questions.forEach(question => {\n        idbPromise('questions', 'put', question);\n      });\n    } else if (!loading) {\n      idbPromise('questions', 'get').then(questions => {\n        dispatch({\n          type: UPDATE_QUESTIONS,\n          questions: questions\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterQuestions() {\n    if (!currentCategory) {\n      return state.questions;\n    }\n\n    return state.questions.filter(question => question.category._id === currentCategory);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Quiz Questions:\"), state.questions.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, filterQuestions().map(question => /*#__PURE__*/React.createElement(Question, {\n    key: question._id,\n    _id: question._id,\n    question: question.question,\n    question: question.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"No Questions\"));\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["C:/Users/Sallam/Desktop/projects/next-step/client/src/components/questions/questions.js"],"names":["React","useEffect","Question","useQuestionContext","UPDATE_QUESTIONS","useQuery","QUERY_QUESTIONS","idbPromise","QuestionList","state","dispatch","currentCategory","console","log","loading","data","type","questions","forEach","question","then","filterQuestions","filter","category","_id","length","map","answer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,kBAAkB,EAA5C;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAsBF,KAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ,EAA4B,eAA5B;AAEA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBV,QAAQ,CAACC,eAAD,CAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGc,IAAH,EAAS;AACPL,MAAAA,QAAQ,CAAC;AACJM,QAAAA,IAAI,EAAEZ,gBADF;AAELa,QAAAA,SAAS,EAAEF,IAAI,CAACE;AAFX,OAAD,CAAR;AAIEF,MAAAA,IAAI,CAACE,SAAL,CAAeC,OAAf,CAAwBC,QAAD,IAAc;AACnCZ,QAAAA,UAAU,CAAC,WAAD,EAAc,KAAd,EAAqBY,QAArB,CAAV;AACD,OAFD;AAGH,KARD,MAQO,IAAI,CAACL,OAAL,EAAc;AACnBP,MAAAA,UAAU,CAAC,WAAD,EAAc,KAAd,CAAV,CAA+Ba,IAA/B,CAAqCH,SAAD,IAAe;AACjDP,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAEZ,gBADC;AAERa,UAAAA,SAAS,EAAEA;AAFH,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAjBQ,EAiBN,CAACF,IAAD,EAAOD,OAAP,EAAgBJ,QAAhB,CAjBM,CAAT;;AAmBA,WAASW,eAAT,GAA2B;AACzB,QAAI,CAACV,eAAL,EAAsB;AACpB,aAAOF,KAAK,CAACQ,SAAb;AACD;;AAED,WAAOR,KAAK,CAACQ,SAAN,CAAgBK,MAAhB,CAAuBH,QAAQ,IAAIA,QAAQ,CAACI,QAAT,CAAkBC,GAAlB,KAA0Bb,eAA7D,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGF,KAAK,CAACQ,SAAN,CAAgBQ,MAAhB,gBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,eAAe,GAAGK,GAAlB,CAAsBP,QAAQ,iBAC3B,oBAAC,QAAD;AACE,IAAA,GAAG,EAAGA,QAAQ,CAACK,GADjB;AAEE,IAAA,GAAG,EAAEL,QAAQ,CAACK,GAFhB;AAGE,IAAA,QAAQ,EAAEL,QAAQ,CAACA,QAHrB;AAIE,IAAA,QAAQ,EAAEA,QAAQ,CAACQ,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADD,gBAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ,CADF;AAmBD;;AAED,eAAenB,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Question from \"../answers/answers\";\nimport { useQuestionContext } from \"../../utils/GlobalState\";\nimport { UPDATE_QUESTIONS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_QUESTIONS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction QuestionList() {\n  const [state, dispatch] = useQuestionContext();\n\n  const { currentCategory } = state;\n  console.log(currentCategory,\"WWE ARE HERE!\")\n\n  const { loading, data } = useQuery(QUERY_QUESTIONS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n           type: UPDATE_QUESTIONS,\n          questions: data.questions\n        });\n        data.questions.forEach((question) => {\n          idbPromise('questions', 'put', question);\n        });\n    } else if (!loading) {\n      idbPromise('questions', 'get').then((questions) => {\n        dispatch({\n          type: UPDATE_QUESTIONS,\n         questions: questions\n       });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterQuestions() {\n    if (!currentCategory) {\n      return state.questions;\n    }\n    \n    return state.questions.filter(question => question.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Quiz Questions:</h2>\n      {state.questions.length ? (\n        <div className=\"flex-row\">\n            {filterQuestions().map(question => (\n                <Question\n                  key= {question._id}\n                  _id={question._id}\n                  question={question.question}\n                  question={question.answer}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>No Questions</h3>\n      )}\n    </div>\n  );\n}\n\nexport default QuestionList;\n"]},"metadata":{},"sourceType":"module"}