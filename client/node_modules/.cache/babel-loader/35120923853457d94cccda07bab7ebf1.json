{"ast":null,"code":"export function capitalizeFirstLetter(string){return string.charAt(0).toUpperCase()+string.slice(1);}export function validateEmail(email){var re=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return re.test(String(email).toLowerCase());}export function pluralize(name,count){if(count===1){return name;}return name+'s';}export function idbPromise(storeName,method,object){return new Promise(function(resolve,reject){var request=window.indexedDB.open('nextStep',1);var db,tx,store;request.onupgradeneeded=function(e){var db=request.result;db.createObjectStore('questions',{keyPath:'_id'});db.createObjectStore('categories',{keyPath:'_id'});};// request.onerror = function(e) {\n//   console.log('There was an error');\n// };\n// request.onsuccess = function(e) {\n//   db = request.result;\n//   tx = db.transaction(storeName, 'readwrite');\n//   store = tx.objectStore(storeName);\n//   db.onerror = function(e) {\n//     console.log('error', e);\n//   };\n//   switch (method) {\n//     case 'put':\n//       store.put(object);\n//       resolve(object);\n//       break;\n//     case 'get':\n//       const all = store.getAll();\n//       all.onsuccess = function() {\n//         resolve(all.result);\n//       };\n//       break;\n//     case 'delete':\n//       store.delete(object._id);\n//       break;\n//     default:\n//       console.log('No valid method');\n//       break;\n//   }\n//   tx.oncomplete = function() {\n//     db.close();\n//   };\n// };\n});}","map":{"version":3,"sources":["C:/Users/dejay/Documents/UofT/Project 3/next-step/next-step/client/src/utils/helpers.js"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","validateEmail","email","re","test","String","toLowerCase","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","request","window","indexedDB","open","db","tx","store","onupgradeneeded","e","result","createObjectStore","keyPath"],"mappings":"AAAA,MAAO,SAASA,CAAAA,qBAAT,CAA+BC,MAA/B,CAAuC,CAC1C,MAAOA,CAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,GAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC,CACD,CAED,MAAO,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CACnC,GAAIC,CAAAA,EAAE,CAAG,uJAAT,CACA,MAAOA,CAAAA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP,CACD,CAED,MAAO,SAASC,CAAAA,SAAT,CAAmBC,IAAnB,CAAyBC,KAAzB,CAAgC,CACrC,GAAIA,KAAK,GAAK,CAAd,CAAiB,CACf,MAAOD,CAAAA,IAAP,CACD,CACD,MAAOA,CAAAA,IAAI,CAAG,GAAd,CACD,CAED,MAAO,SAASE,CAAAA,UAAT,CAAoBC,SAApB,CAA+BC,MAA/B,CAAuCC,MAAvC,CAA+C,CACpD,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC,GAAMC,CAAAA,OAAO,CAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsB,UAAtB,CAAkC,CAAlC,CAAhB,CACA,GAAIC,CAAAA,EAAJ,CAAQC,EAAR,CAAYC,KAAZ,CACAN,OAAO,CAACO,eAAR,CAA0B,SAASC,CAAT,CAAY,CACpC,GAAMJ,CAAAA,EAAE,CAAGJ,OAAO,CAACS,MAAnB,CACAL,EAAE,CAACM,iBAAH,CAAqB,WAArB,CAAkC,CAAEC,OAAO,CAAE,KAAX,CAAlC,EACAP,EAAE,CAACM,iBAAH,CAAqB,YAArB,CAAmC,CAAEC,OAAO,CAAE,KAAX,CAAnC,EACD,CAJD,CAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,CA7CM,CAAP,CA8CD","sourcesContent":["export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  export function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  export function pluralize(name, count) {\n    if (count === 1) {\n      return name;\n    }\n    return name + 's';\n  }\n  \n  export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open('nextStep', 1);\n      let db, tx, store;\n      request.onupgradeneeded = function(e) {\n        const db = request.result;\n        db.createObjectStore('questions', { keyPath: '_id' });\n        db.createObjectStore('categories', { keyPath: '_id' });\n      };\n  \n      // request.onerror = function(e) {\n      //   console.log('There was an error');\n      // };\n  \n      // request.onsuccess = function(e) {\n      //   db = request.result;\n      //   tx = db.transaction(storeName, 'readwrite');\n      //   store = tx.objectStore(storeName);\n  \n      //   db.onerror = function(e) {\n      //     console.log('error', e);\n      //   };\n  \n      //   switch (method) {\n      //     case 'put':\n      //       store.put(object);\n      //       resolve(object);\n      //       break;\n      //     case 'get':\n      //       const all = store.getAll();\n      //       all.onsuccess = function() {\n      //         resolve(all.result);\n      //       };\n      //       break;\n      //     case 'delete':\n      //       store.delete(object._id);\n      //       break;\n      //     default:\n      //       console.log('No valid method');\n      //       break;\n      //   }\n  \n      //   tx.oncomplete = function() {\n      //     db.close();\n      //   };\n      // };\n    });\n  }\n  "]},"metadata":{},"sourceType":"module"}