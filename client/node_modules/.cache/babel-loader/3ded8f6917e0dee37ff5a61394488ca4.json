{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar graphql_1 = require(\"graphql\");\n\nvar isSpecifiedScalarType_1 = require(\"../isSpecifiedScalarType\");\n\nvar visitSchema_1 = require(\"../transforms/visitSchema\");\n\nvar RenameTypes =\n/** @class */\nfunction () {\n  function RenameTypes(renamer, options) {\n    this.renamer = renamer;\n    this.reverseMap = {};\n\n    var _a = options || {},\n        _b = _a.renameBuiltins,\n        renameBuiltins = _b === void 0 ? false : _b,\n        _c = _a.renameScalars,\n        renameScalars = _c === void 0 ? true : _c;\n\n    this.renameBuiltins = renameBuiltins;\n    this.renameScalars = renameScalars;\n  }\n\n  RenameTypes.prototype.transformSchema = function (originalSchema) {\n    var _a;\n\n    var _this = this;\n\n    return visitSchema_1.visitSchema(originalSchema, (_a = {}, _a[visitSchema_1.VisitSchemaKind.TYPE] = function (type) {\n      if (isSpecifiedScalarType_1.default(type) && !_this.renameBuiltins) {\n        return undefined;\n      }\n\n      if (type instanceof graphql_1.GraphQLScalarType && !_this.renameScalars) {\n        return undefined;\n      }\n\n      var newName = _this.renamer(type.name);\n\n      if (newName && newName !== type.name) {\n        _this.reverseMap[newName] = type.name;\n        var newType = Object.assign(Object.create(type), type);\n        newType.name = newName;\n        return newType;\n      }\n    }, _a[visitSchema_1.VisitSchemaKind.ROOT_OBJECT] = function (type) {\n      return undefined;\n    }, _a));\n  };\n\n  RenameTypes.prototype.transformRequest = function (originalRequest) {\n    var _a;\n\n    var _this = this;\n\n    var newDocument = graphql_1.visit(originalRequest.document, (_a = {}, _a[graphql_1.Kind.NAMED_TYPE] = function (node) {\n      var name = node.name.value;\n\n      if (name in _this.reverseMap) {\n        return __assign(__assign({}, node), {\n          name: {\n            kind: graphql_1.Kind.NAME,\n            value: _this.reverseMap[name]\n          }\n        });\n      }\n    }, _a));\n    return {\n      document: newDocument,\n      variables: originalRequest.variables\n    };\n  };\n\n  RenameTypes.prototype.transformResult = function (result) {\n    if (result.data) {\n      var data = this.renameTypes(result.data, 'data');\n\n      if (data !== result.data) {\n        return __assign(__assign({}, result), {\n          data: data\n        });\n      }\n    }\n\n    return result;\n  };\n\n  RenameTypes.prototype.renameTypes = function (value, name) {\n    var _this = this;\n\n    if (name === '__typename') {\n      return this.renamer(value);\n    }\n\n    if (value && typeof value === 'object') {\n      var newValue_1 = Array.isArray(value) ? [] // Create a new object with the same prototype.\n      : Object.create(Object.getPrototypeOf(value));\n      var returnNewValue_1 = false;\n      Object.keys(value).forEach(function (key) {\n        var oldChild = value[key];\n\n        var newChild = _this.renameTypes(oldChild, key);\n\n        newValue_1[key] = newChild;\n\n        if (newChild !== oldChild) {\n          returnNewValue_1 = true;\n        }\n      });\n\n      if (returnNewValue_1) {\n        return newValue_1;\n      }\n    }\n\n    return value;\n  };\n\n  return RenameTypes;\n}();\n\nexports.default = RenameTypes;","map":{"version":3,"sources":["../../src/transforms/RenameTypes.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar isSpecifiedScalarType_1 = require(\"../isSpecifiedScalarType\");\nvar visitSchema_1 = require(\"../transforms/visitSchema\");\nvar RenameTypes = /** @class */ (function () {\n    function RenameTypes(renamer, options) {\n        this.renamer = renamer;\n        this.reverseMap = {};\n        var _a = options || {}, _b = _a.renameBuiltins, renameBuiltins = _b === void 0 ? false : _b, _c = _a.renameScalars, renameScalars = _c === void 0 ? true : _c;\n        this.renameBuiltins = renameBuiltins;\n        this.renameScalars = renameScalars;\n    }\n    RenameTypes.prototype.transformSchema = function (originalSchema) {\n        var _a;\n        var _this = this;\n        return visitSchema_1.visitSchema(originalSchema, (_a = {},\n            _a[visitSchema_1.VisitSchemaKind.TYPE] = function (type) {\n                if (isSpecifiedScalarType_1.default(type) && !_this.renameBuiltins) {\n                    return undefined;\n                }\n                if (type instanceof graphql_1.GraphQLScalarType && !_this.renameScalars) {\n                    return undefined;\n                }\n                var newName = _this.renamer(type.name);\n                if (newName && newName !== type.name) {\n                    _this.reverseMap[newName] = type.name;\n                    var newType = Object.assign(Object.create(type), type);\n                    newType.name = newName;\n                    return newType;\n                }\n            },\n            _a[visitSchema_1.VisitSchemaKind.ROOT_OBJECT] = function (type) {\n                return undefined;\n            },\n            _a));\n    };\n    RenameTypes.prototype.transformRequest = function (originalRequest) {\n        var _a;\n        var _this = this;\n        var newDocument = graphql_1.visit(originalRequest.document, (_a = {},\n            _a[graphql_1.Kind.NAMED_TYPE] = function (node) {\n                var name = node.name.value;\n                if (name in _this.reverseMap) {\n                    return __assign(__assign({}, node), { name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: _this.reverseMap[name],\n                        } });\n                }\n            },\n            _a));\n        return {\n            document: newDocument,\n            variables: originalRequest.variables,\n        };\n    };\n    RenameTypes.prototype.transformResult = function (result) {\n        if (result.data) {\n            var data = this.renameTypes(result.data, 'data');\n            if (data !== result.data) {\n                return __assign(__assign({}, result), { data: data });\n            }\n        }\n        return result;\n    };\n    RenameTypes.prototype.renameTypes = function (value, name) {\n        var _this = this;\n        if (name === '__typename') {\n            return this.renamer(value);\n        }\n        if (value && typeof value === 'object') {\n            var newValue_1 = Array.isArray(value) ? []\n                // Create a new object with the same prototype.\n                : Object.create(Object.getPrototypeOf(value));\n            var returnNewValue_1 = false;\n            Object.keys(value).forEach(function (key) {\n                var oldChild = value[key];\n                var newChild = _this.renameTypes(oldChild, key);\n                newValue_1[key] = newChild;\n                if (newChild !== oldChild) {\n                    returnNewValue_1 = true;\n                }\n            });\n            if (returnNewValue_1) {\n                return newValue_1;\n            }\n        }\n        return value;\n    };\n    return RenameTypes;\n}());\nexports.default = RenameTypes;\n//# sourceMappingURL=RenameTypes.js.map"]},"metadata":{},"sourceType":"script"}