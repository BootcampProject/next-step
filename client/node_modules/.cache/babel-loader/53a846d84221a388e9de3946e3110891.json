{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SchemaReporter = exports.schemaReportGql = void 0;\n\nconst __1 = require(\"../..\");\n\nconst apollo_server_env_1 = require(\"apollo-server-env\");\n\nconst graphql_1 = require(\"graphql\");\n\nexports.schemaReportGql = graphql_1.print(__1.gql`\n  mutation SchemaReport($report: SchemaReport!, $coreSchema: String) {\n    reportSchema(report: $report, coreSchema: $coreSchema) {\n      __typename\n      ... on ReportSchemaError {\n        message\n        code\n      }\n      ... on ReportSchemaResponse {\n        inSeconds\n        withCoreSchema\n      }\n    }\n  }\n`);\n\nclass SchemaReporter {\n  constructor(options) {\n    var _a;\n\n    this.headers = new apollo_server_env_1.Headers();\n    this.headers.set('Content-Type', 'application/json');\n    this.headers.set('x-api-key', options.apiKey);\n    this.headers.set('apollographql-client-name', 'ApolloServerPluginSchemaReporting');\n    this.headers.set('apollographql-client-version', require('../../../package.json').version);\n    this.endpointUrl = options.endpointUrl || 'https://schema-reporting.api.apollographql.com/api/graphql';\n    this.schemaReport = options.schemaReport;\n    this.coreSchema = options.coreSchema;\n    this.isStopped = false;\n    this.logger = options.logger;\n    this.initialReportingDelayInMs = options.initialReportingDelayInMs;\n    this.fallbackReportingDelayInMs = options.fallbackReportingDelayInMs;\n    this.fetcher = (_a = options.fetcher) !== null && _a !== void 0 ? _a : apollo_server_env_1.fetch;\n  }\n\n  stopped() {\n    return this.isStopped;\n  }\n\n  start() {\n    this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(false), this.initialReportingDelayInMs);\n  }\n\n  stop() {\n    this.isStopped = true;\n\n    if (this.pollTimer) {\n      clearTimeout(this.pollTimer);\n      this.pollTimer = undefined;\n    }\n  }\n\n  sendOneReportAndScheduleNext(sendNextWithCoreSchema) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.pollTimer = undefined;\n      if (this.stopped()) return;\n\n      try {\n        const result = yield this.reportSchema(sendNextWithCoreSchema);\n\n        if (!result) {\n          return;\n        }\n\n        if (!this.stopped()) {\n          this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(result.withCoreSchema), result.inSeconds * 1000);\n        }\n\n        return;\n      } catch (error) {\n        this.logger.error(`Error reporting server info to Apollo during schema reporting: ${error}`);\n\n        if (!this.stopped()) {\n          this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(false), this.fallbackReportingDelayInMs);\n        }\n      }\n    });\n  }\n\n  reportSchema(withCoreSchema) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        data,\n        errors\n      } = yield this.apolloQuery({\n        report: this.schemaReport,\n        coreSchema: withCoreSchema ? this.coreSchema : null\n      });\n\n      if (errors) {\n        throw new Error(errors.map(x => x.message).join('\\n'));\n      }\n\n      function msgForUnexpectedResponse(data) {\n        return ['Unexpected response shape from Apollo when', 'reporting schema. If this continues, please reach', 'out to support@apollographql.com.', 'Received response:', JSON.stringify(data)].join(' ');\n      }\n\n      if (!data || !data.reportSchema) {\n        throw new Error(msgForUnexpectedResponse(data));\n      }\n\n      if (data.reportSchema.__typename === 'ReportSchemaResponse') {\n        return data.reportSchema;\n      } else if (data.reportSchema.__typename === 'ReportSchemaError') {\n        this.logger.error(['Received input validation error from Apollo:', data.reportSchema.message, 'Stopping reporting. Please fix the input errors.'].join(' '));\n        this.stop();\n        return null;\n      }\n\n      throw new Error(msgForUnexpectedResponse(data));\n    });\n  }\n\n  apolloQuery(variables) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const request = {\n        query: exports.schemaReportGql,\n        variables\n      };\n      const httpRequest = new apollo_server_env_1.Request(this.endpointUrl, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify(request)\n      });\n      const httpResponse = yield this.fetcher(httpRequest);\n\n      if (!httpResponse.ok) {\n        throw new Error([`An unexpected HTTP status code (${httpResponse.status}) was`, 'encountered during schema reporting.'].join(' '));\n      }\n\n      try {\n        return yield httpResponse.json();\n      } catch (error) {\n        throw new Error([\"Couldn't report schema to Apollo.\", 'Parsing response as JSON failed.', 'If this continues please reach out to support@apollographql.com', error].join(' '));\n      }\n    });\n  }\n\n}\n\nexports.SchemaReporter = SchemaReporter;","map":{"version":3,"sources":["../../../src/plugin/schemaReporting/schemaReporter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SchemaReporter = exports.schemaReportGql = void 0;\nconst __1 = require(\"../..\");\nconst apollo_server_env_1 = require(\"apollo-server-env\");\nconst graphql_1 = require(\"graphql\");\nexports.schemaReportGql = graphql_1.print(__1.gql `\n  mutation SchemaReport($report: SchemaReport!, $coreSchema: String) {\n    reportSchema(report: $report, coreSchema: $coreSchema) {\n      __typename\n      ... on ReportSchemaError {\n        message\n        code\n      }\n      ... on ReportSchemaResponse {\n        inSeconds\n        withCoreSchema\n      }\n    }\n  }\n`);\nclass SchemaReporter {\n    constructor(options) {\n        var _a;\n        this.headers = new apollo_server_env_1.Headers();\n        this.headers.set('Content-Type', 'application/json');\n        this.headers.set('x-api-key', options.apiKey);\n        this.headers.set('apollographql-client-name', 'ApolloServerPluginSchemaReporting');\n        this.headers.set('apollographql-client-version', require('../../../package.json').version);\n        this.endpointUrl =\n            options.endpointUrl ||\n                'https://schema-reporting.api.apollographql.com/api/graphql';\n        this.schemaReport = options.schemaReport;\n        this.coreSchema = options.coreSchema;\n        this.isStopped = false;\n        this.logger = options.logger;\n        this.initialReportingDelayInMs = options.initialReportingDelayInMs;\n        this.fallbackReportingDelayInMs = options.fallbackReportingDelayInMs;\n        this.fetcher = (_a = options.fetcher) !== null && _a !== void 0 ? _a : apollo_server_env_1.fetch;\n    }\n    stopped() {\n        return this.isStopped;\n    }\n    start() {\n        this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(false), this.initialReportingDelayInMs);\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.pollTimer) {\n            clearTimeout(this.pollTimer);\n            this.pollTimer = undefined;\n        }\n    }\n    sendOneReportAndScheduleNext(sendNextWithCoreSchema) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.pollTimer = undefined;\n            if (this.stopped())\n                return;\n            try {\n                const result = yield this.reportSchema(sendNextWithCoreSchema);\n                if (!result) {\n                    return;\n                }\n                if (!this.stopped()) {\n                    this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(result.withCoreSchema), result.inSeconds * 1000);\n                }\n                return;\n            }\n            catch (error) {\n                this.logger.error(`Error reporting server info to Apollo during schema reporting: ${error}`);\n                if (!this.stopped()) {\n                    this.pollTimer = setTimeout(() => this.sendOneReportAndScheduleNext(false), this.fallbackReportingDelayInMs);\n                }\n            }\n        });\n    }\n    reportSchema(withCoreSchema) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, errors } = yield this.apolloQuery({\n                report: this.schemaReport,\n                coreSchema: withCoreSchema ? this.coreSchema : null,\n            });\n            if (errors) {\n                throw new Error(errors.map((x) => x.message).join('\\n'));\n            }\n            function msgForUnexpectedResponse(data) {\n                return [\n                    'Unexpected response shape from Apollo when',\n                    'reporting schema. If this continues, please reach',\n                    'out to support@apollographql.com.',\n                    'Received response:',\n                    JSON.stringify(data),\n                ].join(' ');\n            }\n            if (!data || !data.reportSchema) {\n                throw new Error(msgForUnexpectedResponse(data));\n            }\n            if (data.reportSchema.__typename === 'ReportSchemaResponse') {\n                return data.reportSchema;\n            }\n            else if (data.reportSchema.__typename === 'ReportSchemaError') {\n                this.logger.error([\n                    'Received input validation error from Apollo:',\n                    data.reportSchema.message,\n                    'Stopping reporting. Please fix the input errors.',\n                ].join(' '));\n                this.stop();\n                return null;\n            }\n            throw new Error(msgForUnexpectedResponse(data));\n        });\n    }\n    apolloQuery(variables) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = {\n                query: exports.schemaReportGql,\n                variables,\n            };\n            const httpRequest = new apollo_server_env_1.Request(this.endpointUrl, {\n                method: 'POST',\n                headers: this.headers,\n                body: JSON.stringify(request),\n            });\n            const httpResponse = yield this.fetcher(httpRequest);\n            if (!httpResponse.ok) {\n                throw new Error([\n                    `An unexpected HTTP status code (${httpResponse.status}) was`,\n                    'encountered during schema reporting.',\n                ].join(' '));\n            }\n            try {\n                return yield httpResponse.json();\n            }\n            catch (error) {\n                throw new Error([\n                    \"Couldn't report schema to Apollo.\",\n                    'Parsing response as JSON failed.',\n                    'If this continues please reach out to support@apollographql.com',\n                    error,\n                ].join(' '));\n            }\n        });\n    }\n}\nexports.SchemaReporter = SchemaReporter;\n//# sourceMappingURL=schemaReporter.js.map"]},"metadata":{},"sourceType":"script"}