{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar iterall_1 = require(\"iterall\");\n\nfunction observableToAsyncIterable(observable) {\n  var _a;\n\n  var pullQueue = [];\n  var pushQueue = [];\n  var listening = true;\n\n  var pushValue = function (_a) {\n    var data = _a.data;\n\n    if (pullQueue.length !== 0) {\n      pullQueue.shift()({\n        value: data,\n        done: false\n      });\n    } else {\n      pushQueue.push({\n        value: data\n      });\n    }\n  };\n\n  var pushError = function (error) {\n    if (pullQueue.length !== 0) {\n      pullQueue.shift()({\n        value: {\n          errors: [error]\n        },\n        done: false\n      });\n    } else {\n      pushQueue.push({\n        value: {\n          errors: [error]\n        }\n      });\n    }\n  };\n\n  var pullValue = function () {\n    return new Promise(function (resolve) {\n      if (pushQueue.length !== 0) {\n        var element = pushQueue.shift(); // either {value: {errors: [...]}} or {value: ...}\n\n        resolve(__assign(__assign({}, element), {\n          done: false\n        }));\n      } else {\n        pullQueue.push(resolve);\n      }\n    });\n  };\n\n  var subscription = observable.subscribe({\n    next: function (value) {\n      pushValue(value);\n    },\n    error: function (err) {\n      pushError(err);\n    }\n  });\n\n  var emptyQueue = function () {\n    if (listening) {\n      listening = false;\n      subscription.unsubscribe();\n      pullQueue.forEach(function (resolve) {\n        return resolve({\n          value: undefined,\n          done: true\n        });\n      });\n      pullQueue.length = 0;\n      pushQueue.length = 0;\n    }\n  };\n\n  return _a = {\n    next: function () {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , listening ? pullValue() : this.return()];\n        });\n      });\n    },\n    return: function () {\n      emptyQueue();\n      return Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function (error) {\n      emptyQueue();\n      return Promise.reject(error);\n    }\n  }, _a[iterall_1.$$asyncIterator] = function () {\n    return this;\n  }, _a;\n}\n\nexports.observableToAsyncIterable = observableToAsyncIterable;","map":{"version":3,"sources":["../../src/stitching/observableToAsyncIterable.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAGA,SAAgB,yBAAhB,CACE,UADF,EAC2B;;;AAIzB,MAAM,SAAS,GAAe,EAA9B;AACA,MAAM,SAAS,GAAU,EAAzB;AAEA,MAAI,SAAS,GAAG,IAAhB;;AAEA,MAAM,SAAS,GAAG,UAAC,EAAD,EAAc;QAAX,IAAA,GAAA,EAAA,CAAA,I;;AACnB,QAAI,SAAS,CAAC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,MAAA,SAAS,CAAC,KAAV,GAAkB;AAAE,QAAA,KAAK,EAAE,IAAT;AAAe,QAAA,IAAI,EAAE;AAArB,OAAlB;AACD,KAFD,MAEO;AACL,MAAA,SAAS,CAAC,IAAV,CAAe;AAAE,QAAA,KAAK,EAAE;AAAT,OAAf;AACD;AACF,GAND;;AAQA,MAAM,SAAS,GAAG,UAAC,KAAD,EAAW;AAC3B,QAAI,SAAS,CAAC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,MAAA,SAAS,CAAC,KAAV,GAAkB;AAAE,QAAA,KAAK,EAAE;AAAE,UAAA,MAAM,EAAE,CAAC,KAAD;AAAV,SAAT;AAA8B,QAAA,IAAI,EAAE;AAApC,OAAlB;AACD,KAFD,MAEO;AACL,MAAA,SAAS,CAAC,IAAV,CAAe;AAAE,QAAA,KAAK,EAAE;AAAE,UAAA,MAAM,EAAE,CAAC,KAAD;AAAV;AAAT,OAAf;AACD;AACF,GAND;;AAQA,MAAM,SAAS,GAAG,YAAA;AAChB,WAAO,IAAI,OAAJ,CAAY,UAAA,OAAA,EAAO;AACxB,UAAI,SAAS,CAAC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,YAAM,OAAO,GAAG,SAAS,CAAC,KAAV,EAAhB,CAD0B,CAE1B;;AACA,QAAA,OAAO,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACF,OADE,CAAA,EACK;AACV,UAAA,IAAI,EAAE;AADI,SADL,CAAA,CAAP;AAID,OAPD,MAOO;AACL,QAAA,SAAS,CAAC,IAAV,CAAe,OAAf;AACD;AACF,KAXM,CAAP;AAYD,GAbD;;AAeA,MAAM,YAAY,GAAG,UAAU,CAAC,SAAX,CAAqB;AACxC,IAAA,IAAI,EAAJ,UAAK,KAAL,EAAe;AACb,MAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAHuC;AAIxC,IAAA,KAAK,EAAL,UAAM,GAAN,EAAgB;AACd,MAAA,SAAS,CAAC,GAAD,CAAT;AACD;AANuC,GAArB,CAArB;;AASA,MAAM,UAAU,GAAG,YAAA;AACjB,QAAI,SAAJ,EAAe;AACb,MAAA,SAAS,GAAG,KAAZ;AACA,MAAA,YAAY,CAAC,WAAb;AACA,MAAA,SAAS,CAAC,OAAV,CAAkB,UAAA,OAAA,EAAO;AAAI,eAAA,OAAO,CAAC;AAAE,UAAA,KAAK,EAAE,SAAT;AAAoB,UAAA,IAAI,EAAhC;AAAQ,SAAD,CAAP;AAAyC,OAAtE;AACA,MAAA,SAAS,CAAC,MAAV,GAAmB,CAAnB;AACA,MAAA,SAAS,CAAC,MAAV,GAAmB,CAAnB;AACD;AACF,GARD;;AAUA,SAAA,EAAA,GAAA;AACQ,IAAA,IAAI,EAAA,YAAA;;;AACR,iBAAA,CAAA;AAAA;AAAA,YAAO,SAAS,GAAG,SAAS,EAAZ,GAAiB,KAAK,MAAL,EAAjC,CAAA;;;AACD,KAHH;AAIE,IAAA,MAAM,EAAA,YAAA;AACJ,MAAA,UAAU;AACV,aAAO,OAAO,CAAC,OAAR,CAAgB;AAAE,QAAA,KAAK,EAAE,SAAT;AAAoB,QAAA,IAAI,EAAE;AAA1B,OAAhB,CAAP;AACD,KAPH;AAQE,IAAA,KAAK,EAAA,UAAC,KAAD,EAAM;AACT,MAAA,UAAU;AACV,aAAO,OAAO,CAAC,MAAR,CAAe,KAAf,CAAP;AACD;AAXH,GAAA,EAYE,EAAA,CAAC,SAAA,CAAA,eAAD,CAAA,GAAA,YAAA;AACE,WAAO,IAAP;AACD,GAdH,EAeE,EAfF;AAgBD;;AA5ED,OAAA,CAAA,yBAAA,GAAA,yBAAA","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterall_1 = require(\"iterall\");\nfunction observableToAsyncIterable(observable) {\n    var _a;\n    var pullQueue = [];\n    var pushQueue = [];\n    var listening = true;\n    var pushValue = function (_a) {\n        var data = _a.data;\n        if (pullQueue.length !== 0) {\n            pullQueue.shift()({ value: data, done: false });\n        }\n        else {\n            pushQueue.push({ value: data });\n        }\n    };\n    var pushError = function (error) {\n        if (pullQueue.length !== 0) {\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] } });\n        }\n    };\n    var pullValue = function () {\n        return new Promise(function (resolve) {\n            if (pushQueue.length !== 0) {\n                var element = pushQueue.shift();\n                // either {value: {errors: [...]}} or {value: ...}\n                resolve(__assign(__assign({}, element), { done: false }));\n            }\n            else {\n                pullQueue.push(resolve);\n            }\n        });\n    };\n    var subscription = observable.subscribe({\n        next: function (value) {\n            pushValue(value);\n        },\n        error: function (err) {\n            pushError(err);\n        },\n    });\n    var emptyQueue = function () {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            pullQueue.forEach(function (resolve) { return resolve({ value: undefined, done: true }); });\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return _a = {\n            next: function () {\n                return __awaiter(this, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        return [2 /*return*/, listening ? pullValue() : this.return()];\n                    });\n                });\n            },\n            return: function () {\n                emptyQueue();\n                return Promise.resolve({ value: undefined, done: true });\n            },\n            throw: function (error) {\n                emptyQueue();\n                return Promise.reject(error);\n            }\n        },\n        _a[iterall_1.$$asyncIterator] = function () {\n            return this;\n        },\n        _a;\n}\nexports.observableToAsyncIterable = observableToAsyncIterable;\n//# sourceMappingURL=observableToAsyncIterable.js.map"]},"metadata":{},"sourceType":"script"}