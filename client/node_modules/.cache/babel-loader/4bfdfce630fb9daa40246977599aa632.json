{"ast":null,"code":"/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\nvar DEFAULT = require(\"./default\");\n\nvar parser = require(\"./parser\");\n\nvar FilterXSS = require(\"./xss\");\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\n\n\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.filterXSS = filterXSS;\nexports.FilterXSS = FilterXSS;\n\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\nfor (var i in parser) exports[i] = parser[i]; // using `xss` on the browser, output `filterXSS` to the globals\n\n\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n} // using `xss` on the WebWorker, output `filterXSS` to the globals\n\n\nfunction isWorkerEnv() {\n  return typeof self !== \"undefined\" && typeof DedicatedWorkerGlobalScope !== \"undefined\" && self instanceof DedicatedWorkerGlobalScope;\n}\n\nif (isWorkerEnv()) {\n  self.filterXSS = module.exports;\n}","map":{"version":3,"sources":["C:/Users/Sallam/Desktop/projects/next-step/server/node_modules/xss/lib/index.js"],"names":["DEFAULT","require","parser","FilterXSS","filterXSS","html","options","xss","process","exports","module","i","window","isWorkerEnv","self","DedicatedWorkerGlobalScope"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,OAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;AAChC,MAAIC,GAAG,GAAG,IAAIJ,SAAJ,CAAcG,OAAd,CAAV;AACA,SAAOC,GAAG,CAACC,OAAJ,CAAYH,IAAZ,CAAP;AACD;;AAEDI,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBL,SAA3B;AACAK,OAAO,CAACL,SAAR,GAAoBA,SAApB;AACAK,OAAO,CAACN,SAAR,GAAoBA,SAApB;;AACA,KAAK,IAAIQ,CAAT,IAAcX,OAAd,EAAuBS,OAAO,CAACE,CAAD,CAAP,GAAaX,OAAO,CAACW,CAAD,CAApB;;AACvB,KAAK,IAAIA,CAAT,IAAcT,MAAd,EAAsBO,OAAO,CAACE,CAAD,CAAP,GAAaT,MAAM,CAACS,CAAD,CAAnB,C,CAEtB;;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,EAAAA,MAAM,CAACR,SAAP,GAAmBM,MAAM,CAACD,OAA1B;AACD,C,CAED;;;AACA,SAASI,WAAT,GAAuB;AACrB,SACE,OAAOC,IAAP,KAAgB,WAAhB,IACA,OAAOC,0BAAP,KAAsC,WADtC,IAEAD,IAAI,YAAYC,0BAHlB;AAKD;;AACD,IAAIF,WAAW,EAAf,EAAmB;AACjBC,EAAAA,IAAI,CAACV,SAAL,GAAiBM,MAAM,CAACD,OAAxB;AACD","sourcesContent":["/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar FilterXSS = require(\"./xss\");\n\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.filterXSS = filterXSS;\nexports.FilterXSS = FilterXSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\nfor (var i in parser) exports[i] = parser[i];\n\n// using `xss` on the browser, output `filterXSS` to the globals\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n}\n\n// using `xss` on the WebWorker, output `filterXSS` to the globals\nfunction isWorkerEnv() {\n  return (\n    typeof self !== \"undefined\" &&\n    typeof DedicatedWorkerGlobalScope !== \"undefined\" &&\n    self instanceof DedicatedWorkerGlobalScope\n  );\n}\nif (isWorkerEnv()) {\n  self.filterXSS = module.exports;\n}\n"]},"metadata":{},"sourceType":"script"}