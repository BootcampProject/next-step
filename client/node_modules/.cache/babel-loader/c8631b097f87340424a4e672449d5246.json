{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar flattenIntoArray = require('../internals/flatten-into-array');\n\nvar toObject = require('../internals/to-object');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar arraySpeciesCreate = require('../internals/array-species-create'); // `Array.prototype.flat` method\n// https://tc39.es/ecma262/#sec-array.prototype.flat\n\n\n$({\n  target: 'Array',\n  proto: true\n}, {\n  flat: function\n    /* depthArg = 1 */\n  flat() {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = lengthOfArrayLike(O);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toIntegerOrInfinity(depthArg));\n    return A;\n  }\n});","map":{"version":3,"sources":["C:/Users/Sallam/Desktop/projects/next-step/server/node_modules/core-js-pure/modules/es.array.flat.js"],"names":["$","require","flattenIntoArray","toObject","lengthOfArrayLike","toIntegerOrInfinity","arraySpeciesCreate","target","proto","flat","depthArg","arguments","length","undefined","O","sourceLen","A"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,iCAAD,CAA9B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,mCAAD,CAA/B;;AACA,IAAII,mBAAmB,GAAGJ,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,mCAAD,CAAhC,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAD,EAAmC;AAClCC,EAAAA,IAAI,EAAE;AAAc;AAALA,EAAAA,IAAT,GAAkC;AACtC,QAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmBD,SAAS,CAAC,CAAD,CAA5B,GAAkCE,SAAjD;AACA,QAAIC,CAAC,GAAGX,QAAQ,CAAC,IAAD,CAAhB;AACA,QAAIY,SAAS,GAAGX,iBAAiB,CAACU,CAAD,CAAjC;AACA,QAAIE,CAAC,GAAGV,kBAAkB,CAACQ,CAAD,EAAI,CAAJ,CAA1B;AACAE,IAAAA,CAAC,CAACJ,MAAF,GAAWV,gBAAgB,CAACc,CAAD,EAAIF,CAAJ,EAAOA,CAAP,EAAUC,SAAV,EAAqB,CAArB,EAAwBL,QAAQ,KAAKG,SAAb,GAAyB,CAAzB,GAA6BR,mBAAmB,CAACK,QAAD,CAAxE,CAA3B;AACA,WAAOM,CAAP;AACD;AARiC,CAAnC,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://tc39.es/ecma262/#sec-array.prototype.flat\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = lengthOfArrayLike(O);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toIntegerOrInfinity(depthArg));\n    return A;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}