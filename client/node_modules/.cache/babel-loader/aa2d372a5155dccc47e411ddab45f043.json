{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dejay\\\\Documents\\\\UofT\\\\Project 3\\\\next-step\\\\next-step\\\\client\\\\src\\\\components\\\\Nav\\\\nav.js\";\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useQuestionContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport logoImage from './assets/images/Logo.png';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport { BsPersonPlusFill, BsPersonCheckFill } from 'react-icons/bs';\nimport './assets/css/nav.css';\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n  const [state, dispatch] = useQuestionContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      console.log(categoryData);\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBarContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        expand: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBarLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n        as: Link,\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logoImage,\n        className: \"d-inline-block align-top\",\n        width: \"60\",\n        height: \"60\",\n        alt: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 72\n        }\n      }))), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"navbarScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n        id: \"navbarScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"me-auto my-2 my-lg-0\",\n        style: {\n          maxHeight: '200px'\n        },\n        navbarScroll: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }, categories.map(item => /*#__PURE__*/React.createElement(Nav.Link, {\n        key: item._id,\n        onClick: () => {\n          handleClick(item._id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }\n      }, item.name)))), /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/\",\n        onClick: () => Auth.logout(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 45\n        }\n      }, \"Logout\"))))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBarContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        expand: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBarLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n        as: Link,\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logoImage,\n        className: \"d-inline-block align-top\",\n        width: \"60\",\n        height: \"60\",\n        alt: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 68\n        }\n      }))), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"navbarScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n        id: \"navbarScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"me-auto my-2 my-lg-0\",\n        style: {\n          maxHeight: '200px'\n        },\n        navbarScroll: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }, categories.map(item => /*#__PURE__*/React.createElement(Nav.Link, {\n        key: item._id,\n        onClick: () => {\n          handleClick(item._id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 41\n        }\n      }, item.name))), /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }\n      }, \" \", /*#__PURE__*/React.createElement(BsPersonPlusFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 57\n        }\n      }), \" Signup\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 37\n        }\n      }, \" \", /*#__PURE__*/React.createElement(BsPersonCheckFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 56\n        }\n      }), \" Login\")))))));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, showNavigation());\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/dejay/Documents/UofT/Project 3/next-step/next-step/client/src/components/Nav/nav.js"],"names":["React","useEffect","useQuery","useQuestionContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","logoImage","Navbar","Nav","Container","BsPersonPlusFill","BsPersonCheckFill","Auth","Link","NavBar","state","dispatch","categories","loading","data","categoryData","console","log","type","forEach","category","then","handleClick","id","currentCategory","showNavigation","loggedIn","maxHeight","map","item","_id","name","logout"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useQuestionContext } from '../../utils/GlobalState';\r\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nimport logoImage from './assets/images/Logo.png';\r\nimport { Navbar,Nav,Container } from 'react-bootstrap';\r\nimport { BsPersonPlusFill,BsPersonCheckFill } from 'react-icons/bs'; \r\nimport './assets/css/nav.css';\r\nimport Auth from \"../../utils/auth\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n    const [state, dispatch] = useQuestionContext();\r\n\r\n    const { categories } = state;\r\n\r\n    const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n    useEffect(() => {\r\n        if (categoryData) {\r\n            console.log(categoryData)\r\n        dispatch({\r\n            type: UPDATE_CATEGORIES,\r\n            categories: categoryData.categories\r\n        });\r\n        categoryData.categories.forEach(category => {\r\n            idbPromise('categories', 'put', category);\r\n        });\r\n        } else if (!loading) {\r\n        idbPromise('categories', 'get').then(categories => {\r\n            dispatch({\r\n            type: UPDATE_CATEGORIES,\r\n            categories: categories\r\n            });\r\n        });\r\n        }\r\n    }, [categoryData, loading, dispatch]);\r\n\r\n    const handleClick = id => {\r\n        dispatch({\r\n        type: UPDATE_CURRENT_CATEGORY,\r\n        currentCategory: id\r\n        });\r\n    };\r\n\r\n\r\n    function showNavigation() {\r\n        if (Auth.loggedIn()) {\r\n          return (\r\n              <div>\r\n                    <div className=\"navBarContainer\">\r\n                        <Navbar expand=\"lg\">\r\n                            <Container fluid>\r\n                                <div className=\"navBarLogo\">\r\n                                    <Navbar.Brand as={ Link } to={\"/\"}><img src={logoImage} className=\"d-inline-block align-top\" width=\"60\" height=\"60\" alt=\"Home\" /></Navbar.Brand>\r\n                                </div>\r\n                                <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                                <Navbar.Collapse id=\"navbarScroll\">\r\n                                    <Nav className=\"me-auto my-2 my-lg-0\" style={{ maxHeight: '200px' }} navbarScroll>\r\n                                        {categories.map(item => (\r\n                                            <Nav.Link \r\n                                            key={item._id}\r\n                                            onClick={() => {\r\n                                              handleClick(item._id);\r\n                                            }}>\r\n                                                <a href=\"\">{item.name}</a>\r\n                                                \r\n                                            </Nav.Link>\r\n                                        ))}\r\n                                    </Nav>\r\n                                    <Nav>\r\n                                        <Nav.Link>\r\n                                            <a href=\"/\" onClick={() => Auth.logout()}>\r\n                                                Logout\r\n                                            </a>\r\n                                        </Nav.Link>\r\n                                    </Nav>\r\n                                </Navbar.Collapse>\r\n                            </Container>\r\n                        </Navbar>\r\n                    </div>\r\n              </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div>\r\n                <div className=\"navBarContainer\">\r\n                    <Navbar expand=\"lg\">\r\n                        <Container fluid>\r\n                            <div className=\"navBarLogo\">\r\n                                <Navbar.Brand as={ Link } to={\"/\"}><img src={logoImage} className=\"d-inline-block align-top\" width=\"60\" height=\"60\" alt=\"Home\" /></Navbar.Brand>\r\n                            </div>\r\n                            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                            <Navbar.Collapse id=\"navbarScroll\">\r\n                                <Nav className=\"me-auto my-2 my-lg-0\" style={{ maxHeight: '200px' }} navbarScroll>\r\n                                    {categories.map(item => (\r\n                                        <Nav.Link \r\n                                        key={item._id}\r\n                                        onClick={() => {\r\n                                            handleClick(item._id);\r\n                                        }}>\r\n                                            {item.name}\r\n                                        </Nav.Link>\r\n                                    ))}\r\n                                </Nav>\r\n                                <Nav>\r\n                                    <Link to=\"/signup\"> <BsPersonPlusFill /> Signup</Link>\r\n                                    <Link to=\"/login\"> <BsPersonCheckFill /> Login</Link>\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            {showNavigation()}\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}