{"ast":null,"code":"/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\nvar _ = require(\"./util\");\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\n\n\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n\n  if (i === -1) {\n    var tagName = html.slice(1, -1);\n  } else {\n    var tagName = html.slice(1, i + 1);\n  }\n\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\n\n\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\n\n\nfunction parseTag(html, onTag, escapeHtml) {\n  \"use strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n\n        if (c === \">\") {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(tagStart, rethtml.length, currentTagName, currentHtml, isClosing(currentHtml));\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n\n        if (c === '\"' || c === \"'\") {\n          var i = 1;\n          var ic = html.charAt(currentPos - i);\n\n          while (ic.trim() === \"\" || ic === \"=\") {\n            if (ic === \"=\") {\n              quoteStart = c;\n              continue chariterator;\n            }\n\n            ic = html.charAt(currentPos - ++i);\n          }\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\\.\\-]/gim;\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\n\nfunction parseAttr(html, onAttr) {\n  \"use strict\";\n\n  var lastPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  } // 逐个分析字符\n\n\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      continue;\n    }\n\n    if (tmpName !== false) {\n      if (i === lastPos && (c === '\"' || c === \"'\") && html.charAt(i - 1) === \"=\") {\n        j = html.indexOf(c, i + 1);\n\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (text[0] === '\"' && text[text.length - 1] === '\"' || text[0] === \"'\" && text[text.length - 1] === \"'\") {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;","map":{"version":3,"sources":["C:/Users/Sallam/Desktop/projects/next-step/server/node_modules/xss/lib/parser.js"],"names":["_","require","getTagName","html","i","spaceIndex","tagName","slice","trim","toLowerCase","isClosing","parseTag","onTag","escapeHtml","rethtml","lastPos","tagStart","quoteStart","currentPos","len","length","currentTagName","currentHtml","chariterator","c","charAt","ic","substr","REGEXP_ILLEGAL_ATTR_NAME","parseAttr","onAttr","retAttrs","tmpName","addAttr","name","value","replace","ret","push","v","j","indexOf","test","findNextEqual","findBeforeEqual","stripQuoteWrap","join","str","isQuoteWrapString","text","exports"],"mappings":"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","sourcesContent":["/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    var tagName = html.slice(1, -1);\n  } else {\n    var tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"use strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\") {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if (c === '\"' || c === \"'\") {\n          var i = 1;\n          var ic = html.charAt(currentPos - i);\n\n          while (ic.trim() === \"\" || ic === \"=\") {\n            if (ic === \"=\") {\n              quoteStart = c;\n              continue chariterator;\n            }\n            ic = html.charAt(currentPos - ++i);\n          }\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < html.length) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\\.\\-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"use strict\";\n\n  var lastPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // 逐个分析字符\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastPos &&\n        (c === '\"' || c === \"'\") &&\n        html.charAt(i - 1) === \"=\"\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;\n"]},"metadata":{},"sourceType":"script"}