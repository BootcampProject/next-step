{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dejay\\\\Documents\\\\UofT\\\\Project 3\\\\next-step\\\\next-step\\\\client\\\\src\\\\utils\\\\GlobalState.js\";\nimport React, { createContext, useContext } from \"react\";\nimport { useQuestionReducer } from './reducers';\nconst QuestionContext = createContext();\nconst {\n  Provider\n} = QuestionContext;\n\nconst QuizQuestions = _ref => {\n  let {\n    value = [],\n    ...props\n  } = _ref;\n  const [state, dispatch] = useQuestionReducer({\n    questions: [],\n    categories: [],\n    currentCategory: ''\n  });\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst useQuestionContext = () => {\n  return useContext(QuestionContext);\n};\n\nexport { QuizQuestions, useQuestionContext };","map":{"version":3,"sources":["C:/Users/dejay/Documents/UofT/Project 3/next-step/next-step/client/src/utils/GlobalState.js"],"names":["React","createContext","useContext","useQuestionReducer","QuestionContext","Provider","QuizQuestions","value","props","state","dispatch","questions","categories","currentCategory","useQuestionContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,kBAAT,QAAmC,YAAnC;AAEA,MAAMC,eAAe,GAAGH,aAAa,EAArC;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeD,eAArB;;AAEA,MAAME,aAAa,GAAG,QAA8B;AAAA,MAA7B;AAAEC,IAAAA,KAAK,GAAG,EAAV;AAAc,OAAGC;AAAjB,GAA6B;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,kBAAkB,CAAC;AAC3CQ,IAAAA,SAAS,EAAE,EADgC;AAE3CC,IAAAA,UAAU,EAAE,EAF+B;AAG3CC,IAAAA,eAAe,EAAE;AAH0B,GAAD,CAA5C;AAMA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACJ,KAAD,EAAQC,QAAR;AAAjB,KAAwCF,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CARD;;AAUA,MAAMM,kBAAkB,GAAG,MAAM;AAC/B,SAAOZ,UAAU,CAACE,eAAD,CAAjB;AACD,CAFD;;AAIA,SAASE,aAAT,EAAwBQ,kBAAxB","sourcesContent":["import React, { createContext, useContext } from \"react\";\nimport { useQuestionReducer } from './reducers'\n\nconst QuestionContext = createContext();\nconst { Provider } = QuestionContext;\n\nconst QuizQuestions = ({ value = [], ...props }) => {\n  const [state, dispatch] = useQuestionReducer({\n    questions: [],\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useQuestionContext = () => {\n  return useContext(QuestionContext);\n};\n\nexport { QuizQuestions, useQuestionContext };\n"]},"metadata":{},"sourceType":"module"}