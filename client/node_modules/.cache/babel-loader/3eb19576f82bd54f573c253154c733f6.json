{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sallam\\\\Desktop\\\\projects\\\\next-step\\\\client\\\\src\\\\components\\\\Nav\\\\nav.js\";\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useQuestionContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport logoImage from './assets/images/Logo.png';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport { BsPersonPlusFill, BsPersonCheckFill } from 'react-icons/bs';\nimport './assets/css/nav.css';\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n  const [state, dispatch] = useQuestionContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      console.log(categoryData);\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBarContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        expand: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBarLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n        as: Link,\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logoImage,\n        className: \"d-inline-block align-top\",\n        width: \"60\",\n        height: \"60\",\n        alt: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"navbarScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n        id: \"navbarScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"me-auto my-2 my-lg-0\",\n        style: {\n          maxHeight: \"200px\"\n        },\n        navbarScroll: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 27\n        }\n      }, \"Grade 8 Geo\"))), /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/\",\n        onClick: () => Auth.logout(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 27\n        }\n      }, \"Logout\"))))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBarContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        expand: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBarLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n        as: Link,\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logoImage,\n        className: \"d-inline-block align-top\",\n        width: \"60\",\n        height: \"60\",\n        alt: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 68\n        }\n      }))), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"navbarScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n        id: \"navbarScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"me-auto my-2 my-lg-0\",\n        style: {\n          maxHeight: '200px'\n        },\n        navbarScroll: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }, categories.map(item => /*#__PURE__*/React.createElement(Nav.Link, {\n        key: item._id,\n        onClick: () => {\n          handleClick(item._id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 41\n        }\n      }, item.name))), /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }, \" \", /*#__PURE__*/React.createElement(BsPersonPlusFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 57\n        }\n      }), \" Signup\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, \" \", /*#__PURE__*/React.createElement(BsPersonCheckFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 56\n        }\n      }), \" Login\")))))));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, showNavigation());\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/Sallam/Desktop/projects/next-step/client/src/components/Nav/nav.js"],"names":["React","useEffect","useQuery","useQuestionContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","logoImage","Navbar","Nav","Container","BsPersonPlusFill","BsPersonCheckFill","Auth","Link","NavBar","state","dispatch","categories","loading","data","categoryData","console","log","type","forEach","category","then","handleClick","id","currentCategory","showNavigation","loggedIn","maxHeight","logout","map","item","_id","name"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useQuestionContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nimport logoImage from './assets/images/Logo.png';\nimport { Navbar,Nav,Container } from 'react-bootstrap';\nimport { BsPersonPlusFill,BsPersonCheckFill } from 'react-icons/bs'; \nimport './assets/css/nav.css';\nimport Auth from \"../../utils/auth\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n    const [state, dispatch] = useQuestionContext();\n\n    const { categories } = state;\n\n    const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n    useEffect(() => {\n        if (categoryData) {\n            console.log(categoryData)\n        dispatch({\n            type: UPDATE_CATEGORIES,\n            categories: categoryData.categories\n        });\n        categoryData.categories.forEach(category => {\n            idbPromise('categories', 'put', category);\n        });\n        } else if (!loading) {\n        idbPromise('categories', 'get').then(categories => {\n            dispatch({\n            type: UPDATE_CATEGORIES,\n            categories: categories\n            });\n        });\n        }\n    }, [categoryData, loading, dispatch]);\n\n    const handleClick = id => {\n        dispatch({\n        type: UPDATE_CURRENT_CATEGORY,\n        currentCategory: id\n        });\n    };\n\n\n    function showNavigation() {\n        if (Auth.loggedIn()) {\n          return (\n            <div>\n              <div className=\"navBarContainer\">\n                <Navbar expand=\"lg\">\n                  <Container fluid>\n                    <div className=\"navBarLogo\">\n                      <Navbar.Brand as={Link} to={\"/\"}>\n                        <img\n                          src={logoImage}\n                          className=\"d-inline-block align-top\"\n                          width=\"60\"\n                          height=\"60\"\n                          alt=\"Home\"\n                        />\n                      </Navbar.Brand>\n                    </div>\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                    <Navbar.Collapse id=\"navbarScroll\">\n                      <Nav\n                        className=\"me-auto my-2 my-lg-0\"\n                        style={{ maxHeight: \"200px\" }}\n                        navbarScroll\n                      >\n                        <Nav.Link>\n                          <Link to=\"/signup\">Grade 8 Geo</Link>\n                        </Nav.Link>\n                        {/* {categories.map(item => (\n                                            <a\n                                            key={item._id}\n                                            href=\"/categories\"  onClick={() => {\n                                                handleClick(item._id);\n                                              }}\n                                           >\n                                                {item.name}\n                                                \n                                            </a>\n                                        ))} */}\n\n                        {/* href={\"/categories/\"+item_id} */}\n                      </Nav>\n                      <Nav>\n                        <Nav.Link>\n                          <a href=\"/\" onClick={() => Auth.logout()}>\n                            Logout\n                          </a>\n                        </Nav.Link>\n                      </Nav>\n                    </Navbar.Collapse>\n                  </Container>\n                </Navbar>\n              </div>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n                <div className=\"navBarContainer\">\n                    <Navbar expand=\"lg\">\n                        <Container fluid>\n                            <div className=\"navBarLogo\">\n                                <Navbar.Brand as={ Link } to={\"/\"}><img src={logoImage} className=\"d-inline-block align-top\" width=\"60\" height=\"60\" alt=\"Home\" /></Navbar.Brand>\n                            </div>\n                            <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                            <Navbar.Collapse id=\"navbarScroll\">\n                                <Nav className=\"me-auto my-2 my-lg-0\" style={{ maxHeight: '200px' }} navbarScroll>\n                                    {categories.map(item => (\n                                        <Nav.Link \n                                        key={item._id}\n                                        onClick={() => {\n                                            handleClick(item._id);\n                                        }}>\n                                            {item.name}\n                                        </Nav.Link>\n                                    ))}\n                                </Nav>\n                                <Nav>\n                                    <Link to=\"/signup\"> <BsPersonPlusFill /> Signup</Link>\n                                    <Link to=\"/login\"> <BsPersonCheckFill /> Login</Link>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Container>\n                    </Navbar>\n                </div>\n            </div>\n          );\n        }\n      }\n\n    return (\n        <div>\n            {showNavigation()}\n        </div>\n    );\n}\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}