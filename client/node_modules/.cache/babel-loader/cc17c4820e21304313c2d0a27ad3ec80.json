{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\dejay\\\\Documents\\\\UofT\\\\Project 3\\\\next-step\\\\next-step\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import gql from'graphql-tag';export var LOGIN=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation login($email: String!, $password: String!) {\\n    login(email: $email, password: $password) {\\n      token\\n      user {\\n        _id\\n      }\\n    }\\n  }\\n\"])));export var ADD_USER=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\\n      token\\n      user {\\n        _id\\n      }\\n    }\\n  }\\n\"])));export var ADD_NEWQUESTION=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  mutation newquestion($question: String!, $answer: String!, $category: String!) {\\n    newquestion(question: $question, answer: $answer, category: $category) {\\n      token\\n      user {\\n        _id\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["C:/Users/dejay/Documents/UofT/Project 3/next-step/next-step/client/src/utils/mutations.js"],"names":["gql","LOGIN","ADD_USER","ADD_NEWQUESTION"],"mappings":"4QAAA,MAAOA,CAAAA,GAAP,KAAgB,aAAhB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAGD,GAAH,0OAAX,CAYP,MAAO,IAAME,CAAAA,QAAQ,CAAGF,GAAH,qUAAd,CAWP,MAAO,IAAMG,CAAAA,eAAe,CAAGH,GAAH,oSAArB","sourcesContent":["import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_NEWQUESTION = gql`\n  mutation newquestion($question: String!, $answer: String!, $category: String!) {\n    newquestion(question: $question, answer: $answer, category: $category) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;"]},"metadata":{},"sourceType":"module"}