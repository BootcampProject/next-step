{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar graphql_1 = require(\"graphql\");\n\nvar linkToFetcher_1 = require(\"./linkToFetcher\");\n\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\n\nvar makeExecutableSchema_1 = require(\"../makeExecutableSchema\");\n\nvar schemaRecreation_1 = require(\"./schemaRecreation\");\n\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\n\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\n\nvar errors_1 = require(\"./errors\");\n\nvar observableToAsyncIterable_1 = require(\"./observableToAsyncIterable\");\n\nfunction makeRemoteExecutableSchema(_a) {\n  var _b;\n\n  var schema = _a.schema,\n      link = _a.link,\n      fetcher = _a.fetcher,\n      _c = _a.createResolver,\n      customCreateResolver = _c === void 0 ? createResolver : _c,\n      buildSchemaOptions = _a.buildSchemaOptions,\n      _d = _a.printSchemaOptions,\n      printSchemaOptions = _d === void 0 ? {\n    commentDescriptions: true\n  } : _d;\n\n  if (!fetcher && link) {\n    fetcher = linkToFetcher_1.default(link);\n  }\n\n  var typeDefs;\n\n  if (typeof schema === 'string') {\n    typeDefs = schema;\n    schema = graphql_1.buildSchema(typeDefs, buildSchemaOptions);\n  } else {\n    typeDefs = graphql_1.printSchema(schema, printSchemaOptions);\n  } // prepare query resolvers\n\n\n  var queryResolvers = {};\n  var queryType = schema.getQueryType();\n  var queries = queryType.getFields();\n  Object.keys(queries).forEach(function (key) {\n    queryResolvers[key] = customCreateResolver(fetcher);\n  }); // prepare mutation resolvers\n\n  var mutationResolvers = {};\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    var mutations = mutationType.getFields();\n    Object.keys(mutations).forEach(function (key) {\n      mutationResolvers[key] = customCreateResolver(fetcher);\n    });\n  } // prepare subscription resolvers\n\n\n  var subscriptionResolvers = {};\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    var subscriptions = subscriptionType.getFields();\n    Object.keys(subscriptions).forEach(function (key) {\n      subscriptionResolvers[key] = {\n        subscribe: createSubscriptionResolver(key, link)\n      };\n    });\n  } // merge resolvers into resolver map\n\n\n  var resolvers = (_b = {}, _b[queryType.name] = queryResolvers, _b);\n\n  if (!isEmptyObject_1.default(mutationResolvers)) {\n    resolvers[mutationType.name] = mutationResolvers;\n  }\n\n  if (!isEmptyObject_1.default(subscriptionResolvers)) {\n    resolvers[subscriptionType.name] = subscriptionResolvers;\n  } // add missing abstract resolvers (scalar, unions, interfaces)\n\n\n  var typeMap = schema.getTypeMap();\n  var types = Object.keys(typeMap).map(function (name) {\n    return typeMap[name];\n  });\n\n  var _loop_1 = function (type) {\n    if (type instanceof graphql_1.GraphQLInterfaceType || type instanceof graphql_1.GraphQLUnionType) {\n      resolvers[type.name] = {\n        __resolveType: function (parent, context, info) {\n          return resolveFromParentTypename_1.default(parent, info.schema);\n        }\n      };\n    } else if (type instanceof graphql_1.GraphQLScalarType) {\n      if (!(type === graphql_1.GraphQLID || type === graphql_1.GraphQLString || type === graphql_1.GraphQLFloat || type === graphql_1.GraphQLBoolean || type === graphql_1.GraphQLInt)) {\n        resolvers[type.name] = schemaRecreation_1.recreateType(type, function (name) {\n          return null;\n        }, false);\n      }\n    } else if (type instanceof graphql_1.GraphQLObjectType && type.name.slice(0, 2) !== '__' && type !== queryType && type !== mutationType && type !== subscriptionType) {\n      var resolver_1 = {};\n      Object.keys(type.getFields()).forEach(function (field) {\n        resolver_1[field] = defaultMergedResolver_1.default;\n      });\n      resolvers[type.name] = resolver_1;\n    }\n  };\n\n  for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n    var type = types_1[_i];\n\n    _loop_1(type);\n  }\n\n  return makeExecutableSchema_1.makeExecutableSchema({\n    typeDefs: typeDefs,\n    resolvers: resolvers\n  });\n}\n\nexports.default = makeRemoteExecutableSchema;\n\nfunction createResolver(fetcher) {\n  var _this = this;\n\n  return function (root, args, context, info) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var fragments, document, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            fragments = Object.keys(info.fragments).map(function (fragment) {\n              return info.fragments[fragment];\n            });\n            document = {\n              kind: graphql_1.Kind.DOCUMENT,\n              definitions: __spreadArrays([info.operation], fragments)\n            };\n            return [4\n            /*yield*/\n            , fetcher({\n              query: document,\n              variables: info.variableValues,\n              context: {\n                graphqlContext: context\n              }\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , errors_1.checkResultAndHandleErrors(result, info)];\n        }\n      });\n    });\n  };\n}\n\nexports.createResolver = createResolver;\n\nfunction createSubscriptionResolver(name, link) {\n  return function (root, args, context, info) {\n    var fragments = Object.keys(info.fragments).map(function (fragment) {\n      return info.fragments[fragment];\n    });\n    var document = {\n      kind: graphql_1.Kind.DOCUMENT,\n      definitions: __spreadArrays([info.operation], fragments)\n    };\n    var operation = {\n      query: document,\n      variables: info.variableValues,\n      context: {\n        graphqlContext: context\n      }\n    };\n    var observable = linkToFetcher_1.execute(link, operation);\n    return observableToAsyncIterable_1.observableToAsyncIterable(observable);\n  };\n}","map":{"version":3,"sources":["../../src/stitching/makeRemoteExecutableSchema.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar linkToFetcher_1 = require(\"./linkToFetcher\");\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\nvar makeExecutableSchema_1 = require(\"../makeExecutableSchema\");\nvar schemaRecreation_1 = require(\"./schemaRecreation\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\nvar errors_1 = require(\"./errors\");\nvar observableToAsyncIterable_1 = require(\"./observableToAsyncIterable\");\nfunction makeRemoteExecutableSchema(_a) {\n    var _b;\n    var schema = _a.schema, link = _a.link, fetcher = _a.fetcher, _c = _a.createResolver, customCreateResolver = _c === void 0 ? createResolver : _c, buildSchemaOptions = _a.buildSchemaOptions, _d = _a.printSchemaOptions, printSchemaOptions = _d === void 0 ? { commentDescriptions: true } : _d;\n    if (!fetcher && link) {\n        fetcher = linkToFetcher_1.default(link);\n    }\n    var typeDefs;\n    if (typeof schema === 'string') {\n        typeDefs = schema;\n        schema = graphql_1.buildSchema(typeDefs, buildSchemaOptions);\n    }\n    else {\n        typeDefs = graphql_1.printSchema(schema, printSchemaOptions);\n    }\n    // prepare query resolvers\n    var queryResolvers = {};\n    var queryType = schema.getQueryType();\n    var queries = queryType.getFields();\n    Object.keys(queries).forEach(function (key) {\n        queryResolvers[key] = customCreateResolver(fetcher);\n    });\n    // prepare mutation resolvers\n    var mutationResolvers = {};\n    var mutationType = schema.getMutationType();\n    if (mutationType) {\n        var mutations = mutationType.getFields();\n        Object.keys(mutations).forEach(function (key) {\n            mutationResolvers[key] = customCreateResolver(fetcher);\n        });\n    }\n    // prepare subscription resolvers\n    var subscriptionResolvers = {};\n    var subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        var subscriptions = subscriptionType.getFields();\n        Object.keys(subscriptions).forEach(function (key) {\n            subscriptionResolvers[key] = {\n                subscribe: createSubscriptionResolver(key, link)\n            };\n        });\n    }\n    // merge resolvers into resolver map\n    var resolvers = (_b = {}, _b[queryType.name] = queryResolvers, _b);\n    if (!isEmptyObject_1.default(mutationResolvers)) {\n        resolvers[mutationType.name] = mutationResolvers;\n    }\n    if (!isEmptyObject_1.default(subscriptionResolvers)) {\n        resolvers[subscriptionType.name] = subscriptionResolvers;\n    }\n    // add missing abstract resolvers (scalar, unions, interfaces)\n    var typeMap = schema.getTypeMap();\n    var types = Object.keys(typeMap).map(function (name) { return typeMap[name]; });\n    var _loop_1 = function (type) {\n        if (type instanceof graphql_1.GraphQLInterfaceType || type instanceof graphql_1.GraphQLUnionType) {\n            resolvers[type.name] = {\n                __resolveType: function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                }\n            };\n        }\n        else if (type instanceof graphql_1.GraphQLScalarType) {\n            if (!(type === graphql_1.GraphQLID ||\n                type === graphql_1.GraphQLString ||\n                type === graphql_1.GraphQLFloat ||\n                type === graphql_1.GraphQLBoolean ||\n                type === graphql_1.GraphQLInt)) {\n                resolvers[type.name] = schemaRecreation_1.recreateType(type, function (name) { return null; }, false);\n            }\n        }\n        else if (type instanceof graphql_1.GraphQLObjectType &&\n            type.name.slice(0, 2) !== '__' &&\n            type !== queryType &&\n            type !== mutationType &&\n            type !== subscriptionType) {\n            var resolver_1 = {};\n            Object.keys(type.getFields()).forEach(function (field) {\n                resolver_1[field] = defaultMergedResolver_1.default;\n            });\n            resolvers[type.name] = resolver_1;\n        }\n    };\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        _loop_1(type);\n    }\n    return makeExecutableSchema_1.makeExecutableSchema({\n        typeDefs: typeDefs,\n        resolvers: resolvers\n    });\n}\nexports.default = makeRemoteExecutableSchema;\nfunction createResolver(fetcher) {\n    var _this = this;\n    return function (root, args, context, info) { return __awaiter(_this, void 0, void 0, function () {\n        var fragments, document, result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n                    document = {\n                        kind: graphql_1.Kind.DOCUMENT,\n                        definitions: __spreadArrays([info.operation], fragments)\n                    };\n                    return [4 /*yield*/, fetcher({\n                            query: document,\n                            variables: info.variableValues,\n                            context: { graphqlContext: context }\n                        })];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/, errors_1.checkResultAndHandleErrors(result, info)];\n            }\n        });\n    }); };\n}\nexports.createResolver = createResolver;\nfunction createSubscriptionResolver(name, link) {\n    return function (root, args, context, info) {\n        var fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n        var document = {\n            kind: graphql_1.Kind.DOCUMENT,\n            definitions: __spreadArrays([info.operation], fragments)\n        };\n        var operation = {\n            query: document,\n            variables: info.variableValues,\n            context: { graphqlContext: context }\n        };\n        var observable = linkToFetcher_1.execute(link, operation);\n        return observableToAsyncIterable_1.observableToAsyncIterable(observable);\n    };\n}\n//# sourceMappingURL=makeRemoteExecutableSchema.js.map"]},"metadata":{},"sourceType":"script"}