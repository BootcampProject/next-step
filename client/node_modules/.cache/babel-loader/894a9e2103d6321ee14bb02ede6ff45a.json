{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar makeExecutableSchema_1 = require(\"../makeExecutableSchema\");\n\nvar visitSchema_1 = require(\"../transforms/visitSchema\");\n\nvar transforms_1 = require(\"../transforms/transforms\");\n\nvar resolvers_1 = require(\"../stitching/resolvers\");\n\nfunction transformSchema(targetSchema, transforms) {\n  var schema = visitSchema_1.visitSchema(targetSchema, {}, true);\n  var mapping = resolvers_1.generateSimpleMapping(targetSchema);\n  var resolvers = resolvers_1.generateProxyingResolvers(targetSchema, transforms, mapping);\n  schema = makeExecutableSchema_1.addResolveFunctionsToSchema({\n    schema: schema,\n    resolvers: resolvers,\n    resolverValidationOptions: {\n      allowResolversNotInSchema: true\n    }\n  });\n  schema = transforms_1.applySchemaTransforms(schema, transforms);\n  schema.transforms = transforms;\n  return schema;\n}\n\nexports.default = transformSchema;","map":{"version":3,"sources":["../../src/transforms/transformSchema.ts"],"names":[],"mappings":";;;;AACA,IAAA,sBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAKA,SAAwB,eAAxB,CACE,YADF,EAEE,UAFF,EAE8B;AAE5B,MAAI,MAAM,GAAG,aAAA,CAAA,WAAA,CAAY,YAAZ,EAA0B,EAA1B,EAA8B,IAA9B,CAAb;AACA,MAAM,OAAO,GAAG,WAAA,CAAA,qBAAA,CAAsB,YAAtB,CAAhB;AACA,MAAM,SAAS,GAAG,WAAA,CAAA,yBAAA,CAChB,YADgB,EAEhB,UAFgB,EAGhB,OAHgB,CAAlB;AAKA,EAAA,MAAM,GAAG,sBAAA,CAAA,2BAAA,CAA4B;AACnC,IAAA,MAAM,EAAA,MAD6B;AAEnC,IAAA,SAAS,EAAA,SAF0B;AAGnC,IAAA,yBAAyB,EAAE;AACzB,MAAA,yBAAyB,EAAE;AADF;AAHQ,GAA5B,CAAT;AAOA,EAAA,MAAM,GAAG,YAAA,CAAA,qBAAA,CAAsB,MAAtB,EAA8B,UAA9B,CAAT;AACC,EAAA,MAAc,CAAC,UAAf,GAA4B,UAA5B;AACD,SAAO,MAAP;AACD;;AArBD,OAAA,CAAA,OAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar makeExecutableSchema_1 = require(\"../makeExecutableSchema\");\nvar visitSchema_1 = require(\"../transforms/visitSchema\");\nvar transforms_1 = require(\"../transforms/transforms\");\nvar resolvers_1 = require(\"../stitching/resolvers\");\nfunction transformSchema(targetSchema, transforms) {\n    var schema = visitSchema_1.visitSchema(targetSchema, {}, true);\n    var mapping = resolvers_1.generateSimpleMapping(targetSchema);\n    var resolvers = resolvers_1.generateProxyingResolvers(targetSchema, transforms, mapping);\n    schema = makeExecutableSchema_1.addResolveFunctionsToSchema({\n        schema: schema,\n        resolvers: resolvers,\n        resolverValidationOptions: {\n            allowResolversNotInSchema: true,\n        },\n    });\n    schema = transforms_1.applySchemaTransforms(schema, transforms);\n    schema.transforms = transforms;\n    return schema;\n}\nexports.default = transformSchema;\n//# sourceMappingURL=transformSchema.js.map"]},"metadata":{},"sourceType":"script"}