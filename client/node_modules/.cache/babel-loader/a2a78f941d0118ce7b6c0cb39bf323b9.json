{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sallam\\\\Desktop\\\\projects\\\\next-step\\\\client\\\\src\\\\components\\\\questions\\\\questions.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Question from \"../answers/answers\"; // import { useQuestionContext } from \"../../utils/GlobalState\";\n// import { UPDATE_QUESTIONS } from \"../../utils/actions\";\n// import { useQuery } from \"@apollo/react-hooks\";\n// import { QUERY_QUESTIONS } from \"../../utils/queries\";\n// import { idbPromise } from \"../../utils/helpers\";\n\nimport questions from \"../../questions.json\";\n\nfunction QuestionList() {\n  // const [state, dispatch] = useQuestionContext();\n  const [questionsList, setQuestionsList] = useState(questions); // const { currentCategory } = state;\n  // console.log(currentCategory, \"WWE ARE HERE!\");\n  // const { loading, data } = useQuery(QUERY_QUESTIONS);\n  // useEffect(() => {\n  //   if (data) {\n  //     dispatch({\n  //       type: UPDATE_QUESTIONS,\n  //       questions: data.questions,\n  //     });\n  //     data.questions.forEach((question) => {\n  //       idbPromise(\"questions\", \"put\", question);\n  //     });\n  //   } else if (!loading) {\n  //     idbPromise(\"questions\", \"get\").then((questions) => {\n  //       dispatch({\n  //         type: UPDATE_QUESTIONS,\n  //         questions: questions,\n  //       });\n  //     });\n  //   }\n  // }, [data, loading, dispatch]);\n  // function filterQuestions() {\n  //   if (!currentCategory) {\n  //     return state.questions;\n  //   }\n  //   // const filterQuestions = (currentCategory) => {\n  //   //   (state) => question.category._id !== id;\n  //   // };\n  //   return state.questions.filter(\n  //     (question) => question.category._id === currentCategory\n  //   );\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Quiz Questions:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, filterQuestions().map(question => /*#__PURE__*/React.createElement(Question, {\n    key: question._id,\n    _id: question._id,\n    question: question.question,\n    question: question.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["C:/Users/Sallam/Desktop/projects/next-step/client/src/components/questions/questions.js"],"names":["React","useEffect","useState","Question","questions","QuestionList","questionsList","setQuestionsList","filterQuestions","map","question","_id","answer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,SAASC,YAAT,GAAwB;AACtB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAACE,SAAD,CAAlD,CAFsB,CAItB;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,eAAe,GAAGC,GAAlB,CAAuBC,QAAD,iBACrB,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACC,GADhB;AAEE,IAAA,GAAG,EAAED,QAAQ,CAACC,GAFhB;AAGE,IAAA,QAAQ,EAAED,QAAQ,CAACA,QAHrB;AAIE,IAAA,QAAQ,EAAEA,QAAQ,CAACE,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAHF,CADF;AAgBD;;AAED,eAAeP,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Question from \"../answers/answers\";\n// import { useQuestionContext } from \"../../utils/GlobalState\";\n// import { UPDATE_QUESTIONS } from \"../../utils/actions\";\n// import { useQuery } from \"@apollo/react-hooks\";\n// import { QUERY_QUESTIONS } from \"../../utils/queries\";\n// import { idbPromise } from \"../../utils/helpers\";\nimport questions from \"../../questions.json\";\n\nfunction QuestionList() {\n  // const [state, dispatch] = useQuestionContext();\n  const [questionsList, setQuestionsList] = useState(questions);\n\n  // const { currentCategory } = state;\n  // console.log(currentCategory, \"WWE ARE HERE!\");\n\n  // const { loading, data } = useQuery(QUERY_QUESTIONS);\n\n  // useEffect(() => {\n  //   if (data) {\n  //     dispatch({\n  //       type: UPDATE_QUESTIONS,\n  //       questions: data.questions,\n  //     });\n  //     data.questions.forEach((question) => {\n  //       idbPromise(\"questions\", \"put\", question);\n  //     });\n  //   } else if (!loading) {\n  //     idbPromise(\"questions\", \"get\").then((questions) => {\n  //       dispatch({\n  //         type: UPDATE_QUESTIONS,\n  //         questions: questions,\n  //       });\n  //     });\n  //   }\n  // }, [data, loading, dispatch]);\n\n  // function filterQuestions() {\n  //   if (!currentCategory) {\n  //     return state.questions;\n  //   }\n  //   // const filterQuestions = (currentCategory) => {\n  //   //   (state) => question.category._id !== id;\n  //   // };\n\n  //   return state.questions.filter(\n  //     (question) => question.category._id === currentCategory\n  //   );\n  // }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Quiz Questions:</h2>\n\n      <div className=\"flex-row\">\n        {filterQuestions().map((question) => (\n          <Question\n            key={question._id}\n            _id={question._id}\n            question={question.question}\n            question={question.answer}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionList;\n"]},"metadata":{},"sourceType":"module"}