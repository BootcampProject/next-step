{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar graphql_1 = require(\"graphql\");\n\nvar error_1 = require(\"graphql/error\");\n\nvar getResponseKeyFromInfo_1 = require(\"./getResponseKeyFromInfo\");\n\nif (typeof global !== 'undefined' && 'Symbol' in global || typeof window !== 'undefined' && 'Symbol' in window) {\n  exports.ERROR_SYMBOL = Symbol('subSchemaErrors');\n} else {\n  exports.ERROR_SYMBOL = '@@__subSchemaErrors';\n}\n\nfunction annotateWithChildrenErrors(object, childrenErrors) {\n  var _a;\n\n  if (!childrenErrors || childrenErrors.length === 0) {\n    // Nothing to see here, move along\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    var byIndex_1 = {};\n    childrenErrors.forEach(function (error) {\n      if (!error.path) {\n        return;\n      }\n\n      var index = error.path[1];\n      var current = byIndex_1[index] || [];\n      current.push(__assign(__assign({}, error), {\n        path: error.path.slice(1)\n      }));\n      byIndex_1[index] = current;\n    });\n    return object.map(function (item, index) {\n      return annotateWithChildrenErrors(item, byIndex_1[index]);\n    });\n  }\n\n  return __assign(__assign({}, object), (_a = {}, _a[exports.ERROR_SYMBOL] = childrenErrors.map(function (error) {\n    return __assign(__assign({}, error), error.path ? {\n      path: error.path.slice(1)\n    } : {});\n  }), _a));\n}\n\nexports.annotateWithChildrenErrors = annotateWithChildrenErrors;\n\nfunction getErrorsFromParent(object, fieldName) {\n  var errors = object && object[exports.ERROR_SYMBOL] || [];\n  var childrenErrors = [];\n\n  for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n    var error = errors_1[_i];\n\n    if (!error.path || error.path.length === 1 && error.path[0] === fieldName) {\n      return {\n        kind: 'OWN',\n        error: error\n      };\n    } else if (error.path[0] === fieldName) {\n      childrenErrors.push(error);\n    }\n  }\n\n  return {\n    kind: 'CHILDREN',\n    errors: childrenErrors\n  };\n}\n\nexports.getErrorsFromParent = getErrorsFromParent;\n\nvar CombinedError =\n/** @class */\nfunction (_super) {\n  __extends(CombinedError, _super);\n\n  function CombinedError(message, errors) {\n    var _this = _super.call(this, message) || this;\n\n    _this.errors = errors;\n    return _this;\n  }\n\n  return CombinedError;\n}(Error);\n\nfunction checkResultAndHandleErrors(result, info, responseKey) {\n  if (!responseKey) {\n    responseKey = getResponseKeyFromInfo_1.getResponseKeyFromInfo(info);\n  }\n\n  if (result.errors && (!result.data || result.data[responseKey] == null)) {\n    // apollo-link-http & http-link-dataloader need the\n    // result property to be passed through for better error handling.\n    // If there is only one error, which contains a result property, pass the error through\n    var newError = result.errors.length === 1 && hasResult(result.errors[0]) ? result.errors[0] : new CombinedError(concatErrors(result.errors), result.errors);\n    throw error_1.locatedError(newError, info.fieldNodes, graphql_1.responsePathAsArray(info.path));\n  }\n\n  var resultObject = result.data[responseKey];\n\n  if (result.errors) {\n    resultObject = annotateWithChildrenErrors(resultObject, result.errors);\n  }\n\n  return resultObject;\n}\n\nexports.checkResultAndHandleErrors = checkResultAndHandleErrors;\n\nfunction concatErrors(errors) {\n  return errors.map(function (error) {\n    return error.message;\n  }).join('\\n');\n}\n\nfunction hasResult(error) {\n  return error.result || error.extensions || error.originalError && error.originalError.result;\n}","map":{"version":3,"sources":["../../src/stitching/errors.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar error_1 = require(\"graphql/error\");\nvar getResponseKeyFromInfo_1 = require(\"./getResponseKeyFromInfo\");\nif ((typeof global !== 'undefined' && 'Symbol' in global) ||\n    (typeof window !== 'undefined' && 'Symbol' in window)) {\n    exports.ERROR_SYMBOL = Symbol('subSchemaErrors');\n}\nelse {\n    exports.ERROR_SYMBOL = '@@__subSchemaErrors';\n}\nfunction annotateWithChildrenErrors(object, childrenErrors) {\n    var _a;\n    if (!childrenErrors || childrenErrors.length === 0) {\n        // Nothing to see here, move along\n        return object;\n    }\n    if (Array.isArray(object)) {\n        var byIndex_1 = {};\n        childrenErrors.forEach(function (error) {\n            if (!error.path) {\n                return;\n            }\n            var index = error.path[1];\n            var current = byIndex_1[index] || [];\n            current.push(__assign(__assign({}, error), { path: error.path.slice(1) }));\n            byIndex_1[index] = current;\n        });\n        return object.map(function (item, index) { return annotateWithChildrenErrors(item, byIndex_1[index]); });\n    }\n    return __assign(__assign({}, object), (_a = {}, _a[exports.ERROR_SYMBOL] = childrenErrors.map(function (error) { return (__assign(__assign({}, error), (error.path ? { path: error.path.slice(1) } : {}))); }), _a));\n}\nexports.annotateWithChildrenErrors = annotateWithChildrenErrors;\nfunction getErrorsFromParent(object, fieldName) {\n    var errors = (object && object[exports.ERROR_SYMBOL]) || [];\n    var childrenErrors = [];\n    for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n        var error = errors_1[_i];\n        if (!error.path || (error.path.length === 1 && error.path[0] === fieldName)) {\n            return {\n                kind: 'OWN',\n                error: error\n            };\n        }\n        else if (error.path[0] === fieldName) {\n            childrenErrors.push(error);\n        }\n    }\n    return {\n        kind: 'CHILDREN',\n        errors: childrenErrors\n    };\n}\nexports.getErrorsFromParent = getErrorsFromParent;\nvar CombinedError = /** @class */ (function (_super) {\n    __extends(CombinedError, _super);\n    function CombinedError(message, errors) {\n        var _this = _super.call(this, message) || this;\n        _this.errors = errors;\n        return _this;\n    }\n    return CombinedError;\n}(Error));\nfunction checkResultAndHandleErrors(result, info, responseKey) {\n    if (!responseKey) {\n        responseKey = getResponseKeyFromInfo_1.getResponseKeyFromInfo(info);\n    }\n    if (result.errors && (!result.data || result.data[responseKey] == null)) {\n        // apollo-link-http & http-link-dataloader need the\n        // result property to be passed through for better error handling.\n        // If there is only one error, which contains a result property, pass the error through\n        var newError = result.errors.length === 1 && hasResult(result.errors[0])\n            ? result.errors[0]\n            : new CombinedError(concatErrors(result.errors), result.errors);\n        throw error_1.locatedError(newError, info.fieldNodes, graphql_1.responsePathAsArray(info.path));\n    }\n    var resultObject = result.data[responseKey];\n    if (result.errors) {\n        resultObject = annotateWithChildrenErrors(resultObject, result.errors);\n    }\n    return resultObject;\n}\nexports.checkResultAndHandleErrors = checkResultAndHandleErrors;\nfunction concatErrors(errors) {\n    return errors.map(function (error) { return error.message; }).join('\\n');\n}\nfunction hasResult(error) {\n    return error.result || error.extensions || (error.originalError && error.originalError.result);\n}\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}