{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertNodeHttpToRequest = void 0;\n\nconst apollo_server_env_1 = require(\"apollo-server-env\");\n\nfunction convertNodeHttpToRequest(req) {\n  const headers = new apollo_server_env_1.Headers();\n  Object.keys(req.headers).forEach(key => {\n    const values = req.headers[key];\n\n    if (Array.isArray(values)) {\n      values.forEach(value => headers.append(key, value));\n    } else {\n      headers.append(key, values);\n    }\n  });\n  return new apollo_server_env_1.Request(req.url, {\n    headers,\n    method: req.method\n  });\n}\n\nexports.convertNodeHttpToRequest = convertNodeHttpToRequest;","map":{"version":3,"sources":["../src/nodeHttpToRequest.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,SAAgB,wBAAhB,CAAyC,GAAzC,EAA6D;AAC3D,QAAM,OAAO,GAAG,IAAI,mBAAA,CAAA,OAAJ,EAAhB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,GAAG,CAAC,OAAhB,EAAyB,OAAzB,CAAiC,GAAG,IAAG;AACrC,UAAM,MAAM,GAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAAf;;AACA,QAAI,KAAK,CAAC,OAAN,CAAc,MAAd,CAAJ,EAA2B;AACzB,MAAA,MAAM,CAAC,OAAP,CAAe,KAAK,IAAI,OAAO,CAAC,MAAR,CAAe,GAAf,EAAoB,KAApB,CAAxB;AACD,KAFD,MAEO;AACL,MAAA,OAAO,CAAC,MAAR,CAAe,GAAf,EAAoB,MAApB;AACD;AACF,GAPD;AASA,SAAO,IAAI,mBAAA,CAAA,OAAJ,CAAY,GAAG,CAAC,GAAhB,EAAsB;AAC3B,IAAA,OAD2B;AAE3B,IAAA,MAAM,EAAE,GAAG,CAAC;AAFe,GAAtB,CAAP;AAID;;AAfD,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertNodeHttpToRequest = void 0;\nconst apollo_server_env_1 = require(\"apollo-server-env\");\nfunction convertNodeHttpToRequest(req) {\n    const headers = new apollo_server_env_1.Headers();\n    Object.keys(req.headers).forEach(key => {\n        const values = req.headers[key];\n        if (Array.isArray(values)) {\n            values.forEach(value => headers.append(key, value));\n        }\n        else {\n            headers.append(key, values);\n        }\n    });\n    return new apollo_server_env_1.Request(req.url, {\n        headers,\n        method: req.method,\n    });\n}\nexports.convertNodeHttpToRequest = convertNodeHttpToRequest;\n//# sourceMappingURL=nodeHttpToRequest.js.map"]},"metadata":{},"sourceType":"script"}