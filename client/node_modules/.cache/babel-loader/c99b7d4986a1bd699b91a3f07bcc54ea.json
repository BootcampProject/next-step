{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DurationHistogram = void 0;\n\nclass DurationHistogram {\n  constructor(options) {\n    const initSize = (options === null || options === void 0 ? void 0 : options.initSize) || 74;\n    const buckets = options === null || options === void 0 ? void 0 : options.buckets;\n    const arrayInitSize = Math.max((buckets === null || buckets === void 0 ? void 0 : buckets.length) || 0, initSize);\n    this.buckets = Array(arrayInitSize).fill(0);\n\n    if (buckets) {\n      buckets.forEach((val, index) => this.buckets[index] = val);\n    }\n  }\n\n  toArray() {\n    let bufferedZeroes = 0;\n    const outputArray = [];\n\n    for (const value of this.buckets) {\n      if (value === 0) {\n        bufferedZeroes++;\n      } else {\n        if (bufferedZeroes === 1) {\n          outputArray.push(0);\n        } else if (bufferedZeroes !== 0) {\n          outputArray.push(-bufferedZeroes);\n        }\n\n        outputArray.push(value);\n        bufferedZeroes = 0;\n      }\n    }\n\n    return outputArray;\n  }\n\n  static durationToBucket(durationNs) {\n    const log = Math.log(durationNs / 1000.0);\n    const unboundedBucket = Math.ceil(log / DurationHistogram.EXPONENT_LOG);\n    return unboundedBucket <= 0 || Number.isNaN(unboundedBucket) ? 0 : unboundedBucket >= DurationHistogram.BUCKET_COUNT ? DurationHistogram.BUCKET_COUNT - 1 : unboundedBucket;\n  }\n\n  incrementDuration(durationNs) {\n    this.incrementBucket(DurationHistogram.durationToBucket(durationNs));\n    return this;\n  }\n\n  incrementBucket(bucket) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    if (bucket >= DurationHistogram.BUCKET_COUNT) {\n      throw Error('Bucket is out of bounds of the buckets array');\n    }\n\n    if (bucket >= this.buckets.length) {\n      const oldLength = this.buckets.length;\n      this.buckets.length = bucket + 1;\n      this.buckets.fill(0, oldLength);\n    }\n\n    this.buckets[bucket] += value;\n  }\n\n  combine(otherHistogram) {\n    for (let i = 0; i < otherHistogram.buckets.length; i++) {\n      this.incrementBucket(i, otherHistogram.buckets[i]);\n    }\n  }\n\n}\n\nexports.DurationHistogram = DurationHistogram;\nDurationHistogram.BUCKET_COUNT = 384;\nDurationHistogram.EXPONENT_LOG = Math.log(1.1);","map":{"version":3,"sources":["../../../src/plugin/usageReporting/durationHistogram.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DurationHistogram = void 0;\nclass DurationHistogram {\n    constructor(options) {\n        const initSize = (options === null || options === void 0 ? void 0 : options.initSize) || 74;\n        const buckets = options === null || options === void 0 ? void 0 : options.buckets;\n        const arrayInitSize = Math.max((buckets === null || buckets === void 0 ? void 0 : buckets.length) || 0, initSize);\n        this.buckets = Array(arrayInitSize).fill(0);\n        if (buckets) {\n            buckets.forEach((val, index) => (this.buckets[index] = val));\n        }\n    }\n    toArray() {\n        let bufferedZeroes = 0;\n        const outputArray = [];\n        for (const value of this.buckets) {\n            if (value === 0) {\n                bufferedZeroes++;\n            }\n            else {\n                if (bufferedZeroes === 1) {\n                    outputArray.push(0);\n                }\n                else if (bufferedZeroes !== 0) {\n                    outputArray.push(-bufferedZeroes);\n                }\n                outputArray.push(value);\n                bufferedZeroes = 0;\n            }\n        }\n        return outputArray;\n    }\n    static durationToBucket(durationNs) {\n        const log = Math.log(durationNs / 1000.0);\n        const unboundedBucket = Math.ceil(log / DurationHistogram.EXPONENT_LOG);\n        return unboundedBucket <= 0 || Number.isNaN(unboundedBucket)\n            ? 0\n            : unboundedBucket >= DurationHistogram.BUCKET_COUNT\n                ? DurationHistogram.BUCKET_COUNT - 1\n                : unboundedBucket;\n    }\n    incrementDuration(durationNs) {\n        this.incrementBucket(DurationHistogram.durationToBucket(durationNs));\n        return this;\n    }\n    incrementBucket(bucket, value = 1) {\n        if (bucket >= DurationHistogram.BUCKET_COUNT) {\n            throw Error('Bucket is out of bounds of the buckets array');\n        }\n        if (bucket >= this.buckets.length) {\n            const oldLength = this.buckets.length;\n            this.buckets.length = bucket + 1;\n            this.buckets.fill(0, oldLength);\n        }\n        this.buckets[bucket] += value;\n    }\n    combine(otherHistogram) {\n        for (let i = 0; i < otherHistogram.buckets.length; i++) {\n            this.incrementBucket(i, otherHistogram.buckets[i]);\n        }\n    }\n}\nexports.DurationHistogram = DurationHistogram;\nDurationHistogram.BUCKET_COUNT = 384;\nDurationHistogram.EXPONENT_LOG = Math.log(1.1);\n//# sourceMappingURL=durationHistogram.js.map"]},"metadata":{},"sourceType":"script"}