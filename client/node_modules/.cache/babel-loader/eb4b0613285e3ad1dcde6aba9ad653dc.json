{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.legacyOptionsToPluginOptions = exports.ApolloServerPluginUsageReportingFromLegacyOptions = void 0;\n\nconst graphql_1 = require(\"graphql\");\n\nconst plugin_1 = require(\"./plugin\");\n\nfunction ApolloServerPluginUsageReportingFromLegacyOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.create(null);\n  return plugin_1.ApolloServerPluginUsageReporting(legacyOptionsToPluginOptions(options));\n}\n\nexports.ApolloServerPluginUsageReportingFromLegacyOptions = ApolloServerPluginUsageReportingFromLegacyOptions;\n\nfunction legacyOptionsToPluginOptions(engine) {\n  var _a;\n\n  const pluginOptions = {};\n  pluginOptions.calculateSignature = engine.calculateSignature;\n  pluginOptions.reportIntervalMs = engine.reportIntervalMs;\n  pluginOptions.maxUncompressedReportSize = engine.maxUncompressedReportSize;\n  pluginOptions.endpointUrl = (_a = engine.tracesEndpointUrl) !== null && _a !== void 0 ? _a : engine.endpointUrl;\n  pluginOptions.debugPrintReports = engine.debugPrintReports;\n  pluginOptions.requestAgent = engine.requestAgent;\n  pluginOptions.maxAttempts = engine.maxAttempts;\n  pluginOptions.minimumRetryDelayMs = engine.minimumRetryDelayMs;\n  pluginOptions.reportErrorFunction = engine.reportErrorFunction;\n  pluginOptions.sendVariableValues = engine.sendVariableValues;\n\n  if (typeof engine.reportTiming === 'function') {\n    pluginOptions.includeRequest = engine.reportTiming;\n  }\n\n  pluginOptions.sendHeaders = engine.sendHeaders;\n  pluginOptions.sendReportsImmediately = engine.sendReportsImmediately;\n\n  if (engine.maskErrorDetails && engine.rewriteError) {\n    throw new Error(\"Can't set both maskErrorDetails and rewriteError!\");\n  } else if (engine.rewriteError && typeof engine.rewriteError !== 'function') {\n    throw new Error('rewriteError must be a function');\n  } else if (engine.maskErrorDetails) {\n    pluginOptions.rewriteError = () => new graphql_1.GraphQLError('<masked>');\n\n    delete engine.maskErrorDetails;\n  } else if (engine.rewriteError) {\n    pluginOptions.rewriteError = engine.rewriteError;\n  }\n\n  pluginOptions.generateClientInfo = engine.generateClientInfo;\n  pluginOptions.logger = engine.logger;\n\n  if (typeof engine.privateVariables !== 'undefined' && engine.sendVariableValues) {\n    throw new Error(\"You have set both the 'sendVariableValues' and the deprecated 'privateVariables' options. \" + \"Please only set 'sendVariableValues' (ideally, when calling `ApolloServerPluginUsageReporting` \" + 'instead of the deprecated `engine` option to the `ApolloServer` constructor).');\n  } else if (typeof engine.privateVariables !== 'undefined') {\n    if (engine.privateVariables !== null) {\n      pluginOptions.sendVariableValues = makeSendValuesBaseOptionsFromLegacy(engine.privateVariables);\n    }\n  } else {\n    pluginOptions.sendVariableValues = engine.sendVariableValues;\n  }\n\n  if (typeof engine.privateHeaders !== 'undefined' && engine.sendHeaders) {\n    throw new Error(\"You have set both the 'sendHeaders' and the deprecated 'privateVariables' options. \" + \"Please only set 'sendHeaders' (ideally, when calling `ApolloServerPluginUsageReporting` \" + 'instead of the deprecated `engine` option to the `ApolloServer` constructor).');\n  } else if (typeof engine.privateHeaders !== 'undefined') {\n    if (engine.privateHeaders !== null) {\n      pluginOptions.sendHeaders = makeSendValuesBaseOptionsFromLegacy(engine.privateHeaders);\n    }\n  } else {\n    pluginOptions.sendHeaders = engine.sendHeaders;\n  }\n\n  return pluginOptions;\n}\n\nexports.legacyOptionsToPluginOptions = legacyOptionsToPluginOptions;\n\nfunction makeSendValuesBaseOptionsFromLegacy(legacyPrivateOption) {\n  return Array.isArray(legacyPrivateOption) ? {\n    exceptNames: legacyPrivateOption\n  } : legacyPrivateOption ? {\n    none: true\n  } : {\n    all: true\n  };\n}","map":{"version":3,"sources":["../../../src/plugin/usageReporting/legacyOptions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.legacyOptionsToPluginOptions = exports.ApolloServerPluginUsageReportingFromLegacyOptions = void 0;\nconst graphql_1 = require(\"graphql\");\nconst plugin_1 = require(\"./plugin\");\nfunction ApolloServerPluginUsageReportingFromLegacyOptions(options = Object.create(null)) {\n    return plugin_1.ApolloServerPluginUsageReporting(legacyOptionsToPluginOptions(options));\n}\nexports.ApolloServerPluginUsageReportingFromLegacyOptions = ApolloServerPluginUsageReportingFromLegacyOptions;\nfunction legacyOptionsToPluginOptions(engine) {\n    var _a;\n    const pluginOptions = {};\n    pluginOptions.calculateSignature = engine.calculateSignature;\n    pluginOptions.reportIntervalMs = engine.reportIntervalMs;\n    pluginOptions.maxUncompressedReportSize = engine.maxUncompressedReportSize;\n    pluginOptions.endpointUrl = (_a = engine.tracesEndpointUrl) !== null && _a !== void 0 ? _a : engine.endpointUrl;\n    pluginOptions.debugPrintReports = engine.debugPrintReports;\n    pluginOptions.requestAgent = engine.requestAgent;\n    pluginOptions.maxAttempts = engine.maxAttempts;\n    pluginOptions.minimumRetryDelayMs = engine.minimumRetryDelayMs;\n    pluginOptions.reportErrorFunction = engine.reportErrorFunction;\n    pluginOptions.sendVariableValues = engine.sendVariableValues;\n    if (typeof engine.reportTiming === 'function') {\n        pluginOptions.includeRequest = engine.reportTiming;\n    }\n    pluginOptions.sendHeaders = engine.sendHeaders;\n    pluginOptions.sendReportsImmediately = engine.sendReportsImmediately;\n    if (engine.maskErrorDetails && engine.rewriteError) {\n        throw new Error(\"Can't set both maskErrorDetails and rewriteError!\");\n    }\n    else if (engine.rewriteError && typeof engine.rewriteError !== 'function') {\n        throw new Error('rewriteError must be a function');\n    }\n    else if (engine.maskErrorDetails) {\n        pluginOptions.rewriteError = () => new graphql_1.GraphQLError('<masked>');\n        delete engine.maskErrorDetails;\n    }\n    else if (engine.rewriteError) {\n        pluginOptions.rewriteError = engine.rewriteError;\n    }\n    pluginOptions.generateClientInfo = engine.generateClientInfo;\n    pluginOptions.logger = engine.logger;\n    if (typeof engine.privateVariables !== 'undefined' &&\n        engine.sendVariableValues) {\n        throw new Error(\"You have set both the 'sendVariableValues' and the deprecated 'privateVariables' options. \" +\n            \"Please only set 'sendVariableValues' (ideally, when calling `ApolloServerPluginUsageReporting` \" +\n            'instead of the deprecated `engine` option to the `ApolloServer` constructor).');\n    }\n    else if (typeof engine.privateVariables !== 'undefined') {\n        if (engine.privateVariables !== null) {\n            pluginOptions.sendVariableValues = makeSendValuesBaseOptionsFromLegacy(engine.privateVariables);\n        }\n    }\n    else {\n        pluginOptions.sendVariableValues = engine.sendVariableValues;\n    }\n    if (typeof engine.privateHeaders !== 'undefined' && engine.sendHeaders) {\n        throw new Error(\"You have set both the 'sendHeaders' and the deprecated 'privateVariables' options. \" +\n            \"Please only set 'sendHeaders' (ideally, when calling `ApolloServerPluginUsageReporting` \" +\n            'instead of the deprecated `engine` option to the `ApolloServer` constructor).');\n    }\n    else if (typeof engine.privateHeaders !== 'undefined') {\n        if (engine.privateHeaders !== null) {\n            pluginOptions.sendHeaders = makeSendValuesBaseOptionsFromLegacy(engine.privateHeaders);\n        }\n    }\n    else {\n        pluginOptions.sendHeaders = engine.sendHeaders;\n    }\n    return pluginOptions;\n}\nexports.legacyOptionsToPluginOptions = legacyOptionsToPluginOptions;\nfunction makeSendValuesBaseOptionsFromLegacy(legacyPrivateOption) {\n    return Array.isArray(legacyPrivateOption)\n        ? {\n            exceptNames: legacyPrivateOption,\n        }\n        : legacyPrivateOption\n            ? { none: true }\n            : { all: true };\n}\n//# sourceMappingURL=legacyOptions.js.map"]},"metadata":{},"sourceType":"script"}