{"version":3,"sources":["utils/reducers.js","utils/actions.js","utils/GlobalState.js","utils/queries.js","utils/helpers.js","utils/auth.js","components/Nav/nav.js","components/ContactUs/contact.js","components/Footer/footer.js","components/AboutUs/About.js","components/answers/answers.js","components/QuizPages/geography.js","components/QuizPages/math.js","components/QuizPages/history.js","components/QuizPages/science.js","utils/mutations.js","components/AddQuiz/addQuiz.js","components/HomePage/Home.js","pages/Details.js","pages/Login.js","pages/Signup.js","App.js","index.js","components/Nav/assets/images/Logo.png","components/QuizPages/images/Geography.png","components/QuizPages/images/Math.png","components/QuizPages/images/History.png","components/QuizPages/images/Science.png"],"names":["reducer","state","action","type","questions","categories","currentCategory","QuestionContext","createContext","Provider","QuizQuestions","value","initialState","props","useReducer","dispatch","useQuestionContext","useContext","QUERY_QUESTIONS","gql","QUERY_CATEGORIES","idbPromise","storeName","method","object","Promise","resolve","reject","request","window","indexedDB","open","onupgradeneeded","e","db","result","createObjectStore","keyPath","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","NavBar","useQuery","loading","categoryData","data","useEffect","console","log","forEach","category","then","Auth","loggedIn","className","Navbar","expand","Container","fluid","Brand","as","Link","to","src","logoImage","width","height","alt","Toggle","aria-controls","Collapse","id","Nav","style","maxHeight","navbarScroll","textDecoration","color","href","onClick","logout","map","item","key","_id","name","paddingRight","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","target","isValid","test","String","toLowerCase","validateEmail","length","class","Form","onSubmit","preventDefault","alert","data-testid","Group","controlId","Control","defaultValue","onBlur","placeholder","rows","Button","variant","Footer","Row","Col","sm","AboutUs","about","xs","md","Card","Body","Title","Subtitle","Question","quiz","ask","answer","GeographyQuestionList","qgeography","questionsList","setOpen","backgroundImage","image","backgroundRepeat","backgroundSize","Opacity","ListGroup","Item","aria-expanded","minHeight","in","dimension","body","MathQuestionList","qmath","HistoryQuestionList","qhistory","ScienceQuestionList","qscience","LOGIN","ADD_USER","ADD_NEWQUESTION","AddQuizQuestion","question","useMutation","addquestion","handleFormSubmit","event","a","variables","mutationResponse","newquestion","login","dataname","padding","Label","onChange","Select","aria-label","Home","Detail","useParams","currentQuestion","setCurrentQuestion","find","indexedQuestions","Login","password","error","margin","htmlFor","Text","Signup","addUser","firstName","lastName","client","ApolloClient","operation","setContext","headers","authorization","uri","App","Switch","Route","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d543da62.chunk.js","sourcesContent":["import { useReducer } from \"react\";\nimport {\n  UPDATE_QUESTIONS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_QUESTIONS:\n      return {\n        ...state,\n        questions: [...action.questions],\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useQuestionReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_QUESTIONS = \"UPDATE_QUESTIONS\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";","import React, { createContext, useContext } from \"react\";\nimport { useQuestionReducer } from './reducers'\n\nconst QuestionContext = createContext();\nconst { Provider } = QuestionContext;\n\nconst QuizQuestions = ({ value = [], ...props }) => {\n  const [state, dispatch] = useQuestionReducer({\n    questions: [],\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useQuestionContext = () => {\n  return useContext(QuestionContext);\n};\n\nexport { QuizQuestions, useQuestionContext };\n","import gql from 'graphql-tag';\n\nexport const QUERY_QUESTIONS = gql`\n  query getQuestions($category: ID) {\n    questions(category: $category) {\n      _id\n      question\n      answer\n      category {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const QUERY_ALL_QUESTIONS = gql`\n  {\n    questions {\n      _id\n      question\n      answer\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n  }\n}\n`;","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  export function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  export function pluralize(name, count) {\n    if (count === 1) {\n      return name;\n    }\n    return name + 's';\n  }\n  \n  export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open('nextStep', 1);\n      let db, tx, store;\n      request.onupgradeneeded = function(e) {\n        const db = request.result;\n        db.createObjectStore('questions', { keyPath: '_id' });\n        db.createObjectStore('categories', { keyPath: '_id' });\n      };\n  \n      // request.onerror = function(e) {\n      //   console.log('There was an error');\n      // };\n  \n      // request.onsuccess = function(e) {\n      //   db = request.result;\n      //   tx = db.transaction(storeName, 'readwrite');\n      //   store = tx.objectStore(storeName);\n  \n      //   db.onerror = function(e) {\n      //     console.log('error', e);\n      //   };\n  \n      //   switch (method) {\n      //     case 'put':\n      //       store.put(object);\n      //       resolve(object);\n      //       break;\n      //     case 'get':\n      //       const all = store.getAll();\n      //       all.onsuccess = function() {\n      //         resolve(all.result);\n      //       };\n      //       break;\n      //     case 'delete':\n      //       store.delete(object._id);\n      //       break;\n      //     default:\n      //       console.log('No valid method');\n      //       break;\n      //   }\n  \n      //   tx.oncomplete = function() {\n      //     db.close();\n      //   };\n      // };\n    });\n  }\n  ","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useQuestionContext } from \"../../utils/GlobalState\";\nimport {\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport logoImage from \"./assets/images/Logo.png\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { BsPersonPlusFill, BsPersonCheckFill, BsFillPencilFill } from \"react-icons/bs\";\nimport \"./assets/css/nav.css\";\nimport Auth from \"../../utils/auth\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n    const [state, dispatch] = useQuestionContext();\n\n    const { categories } = state;\n\n    const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n    useEffect(() => {\n        if (categoryData) {\n            console.log(categoryData);\n            dispatch({\n                type: UPDATE_CATEGORIES,\n                categories: categoryData.categories,\n            });\n            categoryData.categories.forEach((category) => {\n                idbPromise(\"categories\", \"put\", category);\n            });\n        } else if (!loading) {\n            idbPromise(\"categories\", \"get\").then((categories) => {\n                dispatch({\n                    type: UPDATE_CATEGORIES,\n                    categories: categories,\n                });\n            });\n        }\n    }, [categoryData, loading, dispatch]);\n\n    const handleClick = (id) => {\n        dispatch({\n            type: UPDATE_CURRENT_CATEGORY,\n            currentCategory: id,\n        });\n    };\n\n    function showNavigation() {\n        if (Auth.loggedIn()) {\n            return (\n                <div>\n                    <div className=\"navBarContainer\">\n                        <Navbar expand=\"lg\">\n                            <Container fluid>\n                                <div className=\"navBarLogo\">\n                                    <Navbar.Brand as={Link} to={\"/\"}>\n                                        <img\n                                            src={logoImage}\n                                            className=\"d-inline-block align-top\"\n                                            width=\"60\"\n                                            height=\"60\"\n                                            alt=\"Home\"\n                                        />\n                                    </Navbar.Brand>\n                                </div>\n                                <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                                <Navbar.Collapse id=\"navbarScroll\">\n                                    <Nav\n                                        className=\"me-auto my-2 my-lg-0\"\n                                        style={{ maxHeight: \"200px\" }}\n                                        navbarScroll\n                                    >\n                                        <Nav.Link>\n                                            <Link\n                                                to=\"/geography8\"\n                                                style={{ textDecoration: \"none \", color: \"black\" }}\n                                            >\n                                                Grade 8 Geography\n                                            </Link>\n                                        </Nav.Link>\n                                        <Nav.Link>\n                                            <Link\n                                                to=\"/math8\"\n                                                style={{ textDecoration: \"none\", color: \"black\" }}\n                                            >\n                                                Grade 8 Math\n                                            </Link>\n                                        </Nav.Link>\n                                        <Nav.Link>\n                                            <Link\n                                                to=\"/history8\"\n                                                style={{ textDecoration: \"none\", color: \"black\" }}\n                                            >\n                                                Grade 8 History\n                                            </Link>\n                                        </Nav.Link>\n                                        <Nav.Link>\n                                            <Link\n                                                to=\"/science8\"\n                                                style={{ textDecoration: \"none\", color: \"black\" }}\n                                            >\n                                                Grade 8 Science\n                                            </Link>\n                                        </Nav.Link>\n                                        {/* {categories.map(item => (\n                                            <a\n                                            key={item._id}\n                                            href=\"/categories\"  onClick={() => {\n                                                handleClick(item._id);\n                                              }}\n                                           >\n                                                {item.name}\n                                                \n                                            </a>\n                                        ))} */}\n\n                                        {/* href={\"/categories/\"+item_id} */}\n                                    </Nav>\n                                    <Nav>\n                                        <Nav.Link>\n                                            <Link to=\"/addQ\" style={{ textDecoration: \"none\", color: \"black\" }}> <BsFillPencilFill /> Add Question</Link>\n                                        </Nav.Link>\n                                        <Nav.Link>\n                                            <a\n                                                href=\"/\"\n                                                onClick={() => Auth.logout()}\n                                                style={{ textDecoration: \"none\", color: \"black\" }}\n                                            >\n                                                Logout\n                                            </a>\n                                        </Nav.Link>\n                                    </Nav>\n                                </Navbar.Collapse>\n                            </Container>\n                        </Navbar>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <div className=\"navBarContainer\">\n                        <Navbar expand=\"lg\">\n                            <Container fluid>\n                                <div className=\"navBarLogo\">\n                                    <Navbar.Brand as={Link} to={\"/\"}>\n                                        <img\n                                            src={logoImage}\n                                            className=\"d-inline-block align-top\"\n                                            width=\"60\"\n                                            height=\"60\"\n                                            alt=\"Home\"\n                                        />\n                                    </Navbar.Brand>\n                                </div>\n                                <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                                <Navbar.Collapse id=\"navbarScroll\">\n                                    <Nav\n                                        className=\"me-auto my-2 my-lg-0\"\n                                        style={{ maxHeight: \"200px\" }}\n                                        navbarScroll\n                                    >\n                                        {categories.map((item) => (\n                                            <Nav.Link\n                                                key={item._id}\n                                                onClick={() => {\n                                                    handleClick(item._id);\n                                                }}\n                                            >\n                                                {item.name}\n                                            </Nav.Link>\n                                        ))}\n                                    </Nav>\n                                    <Nav>\n                                        <Link\n                                            to=\"/signup\"\n                                            style={{\n                                                textDecoration: \"none\",\n                                                color: \"black\",\n                                                paddingRight: \"20px\",\n                                            }}\n                                        >\n                                            {\" \"}\n                                            <BsPersonPlusFill /> Signup\n                                        </Link>\n                                        <Link\n                                            to=\"/login\"\n                                            style={{\n                                                textDecoration: \"none\",\n                                                color: \"black\",\n                                                paddingRight: \"20px\",\n                                            }}\n                                        >\n                                            {\" \"}\n                                            <BsPersonCheckFill /> Login\n                                        </Link>\n                                    </Nav>\n                                </Navbar.Collapse>\n                            </Container>\n                        </Navbar>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    return <div>{showNavigation()}</div>;\n}\nexport default NavBar;","import React, { useState } from 'react';\nimport { Form,Button } from 'react-bootstrap';\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const { name, email, message } = formState;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    window.alert(\"Your contact form has been submitted to our customer service team. They will contact you shortly via email. Thank you 😃\");\n    if (!errorMessage) {\n      console.log('Submit Form', formState);\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n    if (!errorMessage) {\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n      console.log('Handle Form', formState);\n    }\n  };\n\n  return (\n    <div class=\"formStyling\">\n      <Form id=\"contact-form\" onSubmit={handleSubmit}>\n        <h3 data-testid=\"h1tag\">Contact Us</h3>\n        <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlInput1\">\n          {/* <Form.Label>Name</Form.Label> */}\n          <Form.Control type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} placeholder=\"Full Name *\" />\n        </Form.Group>\n        <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlInput1\">\n          {/* <Form.Label>Email address</Form.Label> */}\n          <Form.Control type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} placeholder=\"Email Address *\" />\n        </Form.Group>\n        <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlTextarea1\">\n          {/* <Form.Label>Message</Form.Label> */}\n          <Form.Control as=\"textarea\" rows={1} name=\"message\" defaultValue={message} onBlur={handleChange} placeholder=\"Message *\" />\n        </Form.Group>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n        <Button variant=\"dark\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { Nav,Container,Row,Col } from 'react-bootstrap';\nimport ContactForm from '../ContactUs/contact';\nimport './assets/footer.css';\n\nfunction Footer () {\n\n    return (\n      <div className=\"footerNavbarBackground\">\n        <Container>\n          <Row>\n            <Col sm={4}>\n              {\" \"}\n              <ContactForm />{\" \"}\n            </Col>\n            <Col className=\"footerLinks\">\n              <Nav className=\"flex-column text-center\">\n                <Nav.Link\n                  href=\"/aboutus\"\n                  style={{ textDecoration: \"none\", color: \"black\" }}\n                >\n                  About Us\n                </Nav.Link>\n              </Nav>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n\n}\n\nexport default Footer;","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { BsGithub } from \"react-icons/bs\";\nimport \"./about.css\";\n\nconst AboutUs = () => {\n  return (\n    <div about>\n      <div className=\"aboutHero\">\n        <h2 className=\"headerAbout \">About Us</h2>\n        <p className=\"whatwedo\">\n          The purpose of Next Step is to create a supplemental learning platform\n          where youth at various elementary, middle and high school levels can\n          better prepare themselves in their courses and maximize their learning\n          experience.\n        </p>\n      </div>\n      <div className=\"cardContainerAbout center flex-row flex-container mar\">\n        <Row xs={1} md={2} className=\"g-4\">\n          <Card\n            style={{ width: \"20rem\" }}\n            className=\"card mar center flex-item\"\n          >\n            <Card.Body>\n              <Card.Title>Lia Mattacchione</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Front-end integrator\n              </Card.Subtitle>\n              <Card.Link href=\"https://github.com/LiaMattacchione\">\n                {\" \"}\n                <BsGithub />{\" \"}\n              </Card.Link>\n            </Card.Body>\n          </Card>\n\n          <Card\n            style={{ width: \"20rem\" }}\n            className=\"card mar center flex-item\"\n          >\n            <Card.Body>\n              <Card.Title>Sallam Thabet</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Front-end integrator\n              </Card.Subtitle>\n              <Card.Link href=\"https://github.com/thabets\">\n                {\" \"}\n                <BsGithub />{\" \"}\n              </Card.Link>\n            </Card.Body>\n          </Card>\n        </Row>\n\n        <Row xs={1} md={2} className=\"g-4\">\n          <Card\n            style={{ width: \"20rem\" }}\n            className=\"card mar center flex-item\"\n          >\n            <Card.Body>\n              <Card.Title>Jayme </Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Back-end Developer\n              </Card.Subtitle>\n              <Card.Link href=\"https://github.com/jaymemichelle\">\n                {\" \"}\n                <BsGithub />{\" \"}\n              </Card.Link>\n            </Card.Body>\n          </Card>\n\n          <Card\n            style={{ width: \"20rem\" }}\n            className=\"card mar center flex-item\"\n          >\n            <Card.Body>\n              <Card.Title>Charles Dawkins</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Front-end Component Design\n              </Card.Subtitle>\n              <Card.Link href=\"https://github.com/DawkC\">\n                {\" \"}\n                <BsGithub />{\" \"}\n              </Card.Link>\n            </Card.Body>\n          </Card>\n        </Row>\n        <Row xs={1} md={2} className=\"g-4\">\n          <Card\n            style={{ width: \"20rem\" }}\n            className=\"card mar center flex-item\"\n          >\n            <Card.Body>\n              <Card.Title>Noyemi Ohanyan</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Front-end Design\n              </Card.Subtitle>\n              <Card.Link href=\"https://github.com/nomioh\">\n                {\" \"}\n                <BsGithub />{\" \"}\n              </Card.Link>\n            </Card.Body>\n          </Card>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutUs;","import React from \"react\";\n// import { useQuestionContext } from \"../../utils/GlobalState\";\n\nfunction Question(quiz) {\n  // const [state] = useQuestionContext();\n\n  // const {\n  //   question,\n  //   answer,\n  //   _id,\n  // } = quiz;\n\n  // function filterQuestions() {\n  //   if (!currentCategory) {\n  //     return state.questions;\n  //   }\n\n  //   return state.questions.filter(question => question.category._id === currentCategory);\n  // }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      {/* <Link to={`/questions/${_id}`}>\n        <p>{question, answer}</p>\n      </Link> */}\n      <h3>{quiz.ask}</h3>\n      <h3>{quiz.answer}</h3>\n    </div>\n  );\n}\n\nexport default Question;\n","import React, { useState } from \"react\";\nimport Question from \"../answers/answers\";\nimport qgeography from \"../../qgeography.json\";\nimport image from \"./images/Geography.png\";\n\nimport { Row, Col, Card, Button, Collapse, ListGroup } from \"react-bootstrap\";\nfunction GeographyQuestionList() {\n  const [questionsList, setQuestionsList] = useState(qgeography);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div\n      className=\"my-2 px-2  \"\n      style={{\n        backgroundImage: `url(${image})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <h2 className=\"center \">Geography Quiz Questions:</h2>\n\n      <div className=\"center flex-row  \">\n        {questionsList.map((qgeography) => (\n          <Card style={{ width: \"20rem\", Opacity: \"140%\" }} className=\"mar\">\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Question id={qgeography.id} ask={qgeography.ask} />\n              </ListGroup.Item>\n              <Button\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n                className=\"my-1\"\n                style={{ Opacity: \"unset\" }}\n              >\n                Answer\n              </Button>\n              <div style={{ minHeight: \"0px\" }}>\n                <Collapse in={open} dimension=\"width\">\n                  <div id=\"example-collapse-text\">\n                    <Card body style={{ width: \"20rem\" }}>\n                      <Question answer={qgeography.answer} />\n                    </Card>\n                  </div>\n                </Collapse>\n              </div>\n            </ListGroup>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GeographyQuestionList;","import React, { useState } from \"react\";\nimport { Row, Col, Card, Button, Collapse, ListGroup } from \"react-bootstrap\";\n\nimport image from \"./images/Math.png\";\nimport Question from \"../answers/answers\";\nimport qmath from \"../../qmath.json\";\n\nfunction MathQuestionList() {\n  const [questionsList, setQuestionsList] = useState(qmath);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div\n      className=\"my-2 px-2\"\n      style={{\n        backgroundImage: `url(${image})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <h2 className=\"center\" style={{ color: \"white\" }}>\n        Math Quiz Questions:\n      </h2>\n\n      <div className=\"center flex-row  \">\n        {questionsList.map((qmath) => (\n          <Card style={{ width: \"20rem\" }} className=\"mar\">\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Question id={qmath.id} ask={qmath.ask} />\n              </ListGroup.Item>\n              <Button\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n                className=\"my-1\"\n              >\n                Answer\n              </Button>\n              <div style={{ minHeight: \"0px\" }}>\n                <Collapse in={open} dimension=\"width\">\n                  <div id=\"example-collapse-text\">\n                    <Card body style={{ width: \"20rem\" }}>\n                      <Question answer={qmath.answer} />\n                    </Card>\n                  </div>\n                </Collapse>\n              </div>\n            </ListGroup>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MathQuestionList;","import React, { useState } from \"react\";\nimport { Row, Col, Card, Button, Collapse, ListGroup } from \"react-bootstrap\";\nimport Question from \"../answers/answers\";\nimport qhistory from \"../../qhistory.json\";\nimport image from \"./images/History.png\";\n\nfunction HistoryQuestionList() {\n  const [questionsList, setQuestionsList] = useState(qhistory);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div\n      className=\"my-2 px-2\"\n      style={{\n        backgroundImage: `url(${image})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <h2 className=\"center\">History Quiz Questions:</h2>\n\n      <div className=\"center flex-row \">\n        {questionsList.map((qhistory) => (\n          <Card style={{ width: \"20rem\" }} className=\"mar\">\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Question id={qhistory.id} ask={qhistory.ask} />\n              </ListGroup.Item>\n              <Button\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n                className=\"my-1\"\n              >\n                Answer\n              </Button>\n              <div style={{ minHeight: \"0px\" }}>\n                <Collapse in={open} dimension=\"width\">\n                  <div id=\"example-collapse-text\">\n                    <Card body style={{ width: \"20rem\" }}>\n                      <Question answer={qhistory.answer} />\n                    </Card>\n                  </div>\n                </Collapse>\n              </div>\n            </ListGroup>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default HistoryQuestionList;","import React, { useState } from \"react\";\nimport { Row, Col, Card, Button, Collapse, ListGroup } from \"react-bootstrap\";\n\nimport image from \"./images/Science.png\";\nimport Question from \"../answers/answers\";\nimport qscience from \"../../qscience.json\";\n\nfunction ScienceQuestionList() {\n  const [questionsList, setQuestionsList] = useState(qscience);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div\n      className=\"my-2 px-2 \"\n      style={{\n        backgroundImage: `url(${image})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <h2 className=\"center\" style={{ color: \"white\" }}>\n        Science Quiz Questions:\n      </h2>\n\n      <div className=\"flex-row center\">\n        {questionsList.map((qscience) => (\n          <Card style={{ width: \"20rem\" }} className=\"mar\">\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <Question id={qscience.id} ask={qscience.ask} />\n              </ListGroup.Item>\n              <Button\n                onClick={() => setOpen(!open)}\n                aria-controls=\"example-collapse-text\"\n                aria-expanded={open}\n                className=\"my-1\"\n              >\n                Answer\n              </Button>\n              <div style={{ minHeight: \"0px\" }}>\n                <Collapse in={open} dimension=\"width\">\n                  <div id=\"example-collapse-text\">\n                    <Card body style={{ width: \"20rem\" }}>\n                      <Question answer={qscience.answer} />\n                    </Card>\n                  </div>\n                </Collapse>\n              </div>\n            </ListGroup>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ScienceQuestionList;","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_NEWQUESTION = gql`\n  mutation newquestion($question: String!, $answer: String!, $category: String!) {\n    newquestion(question: $question, answer: $answer, category: $category) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","\nimport { Form, Button, Card } from 'react-bootstrap';\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_NEWQUESTION } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\n\nfunction AddQuizQuestion(props) {\n  const [formState, setFormState] = useState({ question: '', answer: '' });\n  const [addquestion] = useMutation(ADD_NEWQUESTION);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    window.alert(\"Thank you. Your new question will be taken under advisement and review.\");\n    console.log(formState.question)\n    \n    try {\n        const mutationResponse = await addquestion({\n            variables: {\n              question: formState.question, answer: formState.answer, category: formState.category,\n            }\n          });\n          console.log(mutationResponse)\n          const token = mutationResponse.data.newquestion.token;\n          Auth.login(token);\n    } catch (err){console.log(err)}\n  };\n\n  const handleChange = event => {\n    const { dataname, value, id } = event.target;\n    console.log(id)\n    setFormState({\n      ...formState,\n      [id]: value\n    });\n  };\n\n  useEffect (() => {\n    console.log(formState)\n}, [formState])\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <Card >\n                <Form onSubmit={handleFormSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"question\">\n                        <Form.Label>Question:</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} onChange={handleChange} />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"answer\">\n                        <Form.Label>Answer:</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} onChange={handleChange} />\n                    </Form.Group>\n                    <Form.Select aria-label=\"Select a Category\" onChange={handleChange} id=\"category\">\n                        <option>Open this select menu</option>\n                        <option value=\"1\">Grade 8 Geography</option>\n                        <option value=\"2\">Grade 8 Math</option>\n                        <option value=\"3\">Grade 8 Science</option>\n                        <option value=\"4\">Grade 8 History</option>\n                    </Form.Select>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Card>\n        </div>\n    );\n}\n\nexport default AddQuizQuestion;\n\n","import React from \"react\";\nimport './home.css';\n\nconst Home = () => {\n  return (\n    <div className=\"hero-wrapper\">\n      <section className=\"hero\">\n          <div className=\"hero-subtitle\">\n              <h1>Welcome to Next Step - Grade 8</h1>\n          </div>\n      </section>  \n    </div>  \n  );\n};\n\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport { Link} from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { useQuestionContext } from \"../utils/GlobalState\";\nimport {UPDATE_QUESTIONS} from \"../utils/actions\";\nimport { QUERY_QUESTIONS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Detail() {\n  const [state, dispatch] = useQuestionContext();\n  const { id } = useParams();\n\n  const [currentQuestion, setCurrentQuestion] = useState({});\n\n  const { loading, data } = useQuery(QUERY_QUESTIONS);\n\n  const { questions} = state;\n\n  useEffect(() => {\n    // already in global store\n    if (questions.length) {\n      setCurrentQuestion(questions.find(question => question._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_QUESTIONS,\n        questions: data.questions\n      });\n\n      data.questions.forEach((question) => {\n        idbPromise('questions', 'put', question);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('questions', 'get').then((indexedQuestions) => {\n        dispatch({\n          type: UPDATE_QUESTIONS,\n          questions: indexedQuestions\n        });\n      });\n    }\n  }, [questions, data, loading, dispatch, id]);\n\n\n  return (\n    <>\n      {currentQuestion ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Home\n          </Link>\n\n          <h2>{currentQuestion.question}</h2>\n\n          <p>\n            {currentQuestion.answer}\n          </p>\n          \n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Detail;\n","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\nimport { Form,Button,Card } from 'react-bootstrap';\n\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <Card style={{margin: '40px', padding: '20px'}}>\n      \n          <Button variant=\"dark\">\n            <Link to=\"/signup\">\n              ← Go to Signup\n            </Link>\n          </Button>\n\n          <h2>LOGIN</h2>\n\n        <Form onSubmit={handleFormSubmit}>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label htmlFor=\"email\">Email Address:</Form.Label>\n            <Form.Control placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange} />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label htmlFor=\"pwd\">Password:</Form.Label>\n            <Form.Control placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange} />\n          </Form.Group>\n\n          {\n            error ? <div>\n              <p className=\"error-text\" >The provided credentials are incorrect</p>\n            </div> : null\n          }\n\n          <Button variant=\"dark\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n\n      {/* <div className=\"container my-1\">\n        <Link to=\"/signup\">\n          ← Go to Signup\n        </Link>\n\n        <h2>Login</h2>\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"email\">Email address:</label>\n            <input\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          {\n            error ? <div>\n              <p className=\"error-text\" >The provided credentials are incorrect</p>\n            </div> : null\n          }\n          <div className=\"flex-row flex-end\">\n            <button type=\"submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div> */}\n    </Card>\n  );\n}\n\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport { Form,Button,Card } from 'react-bootstrap';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n      <Card style={{margin: '40px', padding: '20px'}}>\n      \n          <Button variant=\"dark\">\n            <Link to=\"/login\">\n              ← Go to Login\n            </Link>\n          </Button>\n\n          <h2>Signup</h2>\n\n        <Form onSubmit={handleFormSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label htmlFor=\"firstName\">First Name:</Form.Label>\n              <Form.Control placeholder=\"First\"\n              name=\"firstName\"\n              type=\"firstName\"\n              id=\"firstName\"\n              onChange={handleChange}/>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label htmlFor=\"lastName\">Last Name:</Form.Label>\n              <Form.Control placeholder=\"Last\"\n              name=\"lastName\"\n              type=\"lastName\"\n              id=\"lastName\"\n              onChange={handleChange}/>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label htmlFor=\"email\">Email Address:</Form.Label>\n            <Form.Control placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange} />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label htmlFor=\"pwd\">Password:</Form.Label>\n            <Form.Control placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange} />\n          </Form.Group>\n\n          <Button variant=\"dark\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n\n        {/* <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div> */}\n\n      </Card>\n    \n  );\n\n}\n\nexport default Signup;","import NavBar from \"./components/Nav/nav\";\nimport React from \"react\";\nimport Footer from \"./components/Footer/footer\";\nimport AboutUs from \"./components/AboutUs/About\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { QuizQuestions } from \"./utils/GlobalState\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\n\nimport GeographyQuestionList from \"./components/QuizPages/geography\";\nimport MathQuestionList from \"./components/QuizPages/math\";\nimport HistoryQuestionList from \"./components/QuizPages/history\";\nimport ScienceQuestionList from \"./components/QuizPages/science\";\nimport AddQuizQuestion from \"./components/AddQuiz/addQuiz\";\n\nimport Home from \"./components/HomePage/Home\";\nimport Detail from \"./pages/Details\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem(\"id_token\");\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    });\n  },\n  uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <QuizQuestions>\n          <NavBar />\n          <main>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/questions/:id\" component={Detail} />\n              <Route exact path=\"/aboutus\" component={AboutUs} />\n              <Route\n                exact\n                path=\"/geography8\"\n                component={GeographyQuestionList}\n              />\n              <Route exact path=\"/math8\" component={MathQuestionList} />\n              <Route exact path=\"/history8\" component={HistoryQuestionList} />\n              <Route exact path=\"/science8\" component={ScienceQuestionList} />\n              <Route exact path=\"/addQ\" component={AddQuizQuestion} />\n            </Switch>\n            <Footer />\n          </main>\n        </QuizQuestions>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","module.exports = __webpack_public_path__ + \"static/media/Logo.c5989f36.png\";","module.exports = __webpack_public_path__ + \"static/media/Geography.ea8f2738.png\";","module.exports = __webpack_public_path__ + \"static/media/Math.33d26e1a.png\";","module.exports = __webpack_public_path__ + \"static/media/History.ef7adeb9.png\";","module.exports = __webpack_public_path__ + \"static/media/Science.9fd30c95.png\";"],"sourceRoot":""}